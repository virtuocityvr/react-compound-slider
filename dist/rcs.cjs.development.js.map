{"version":3,"file":"rcs.cjs.development.js","sources":["../src/Slider/utils.ts","../src/Slider/modes.ts","../src/utils.ts","../src/Rail/Rail.tsx","../src/Handles/Handles.tsx","../src/scales/LinearScale.ts","../src/Ticks/Ticks.tsx","../src/Tracks/Tracks.tsx","../src/scales/DiscreteScale.ts","../src/Slider/Slider.tsx"],"sourcesContent":["import React from 'react';\nimport warning from 'warning';\n\nimport { DiscreteScale } from '../scales/DiscreteScale';\nimport { HandleItem } from '../types';\n\nexport const prfx = 'react-compound-slider:';\n\nexport function getSortByVal(reversed: boolean = false) {\n  return function sortByVal(a: HandleItem, b: HandleItem) {\n    if (a.val > b.val) {\n      return reversed ? -1 : 1;\n    }\n\n    if (b.val > a.val) {\n      return reversed ? 1 : -1;\n    }\n\n    return 0;\n  };\n}\n\nexport function getUpdatedHandles(\n  handles: HandleItem[],\n  updateKey: string,\n  updateValue: number,\n  reversed: boolean = false\n) {\n  const index = handles.findIndex(v => v.key === updateKey);\n\n  if (index !== -1) {\n    const { key, val } = handles[index];\n\n    if (val === updateValue) {\n      return handles;\n    }\n\n    return [\n      ...handles.slice(0, index),\n      { key, val: updateValue },\n      ...handles.slice(index + 1),\n    ].sort(getSortByVal(reversed));\n  }\n\n  return handles;\n}\n\nexport function getSliderDomain(slider: Element | null, vertical: boolean) {\n  if (!slider) {\n    return [0, 0];\n  }\n\n  const s = slider.getBoundingClientRect();\n\n  const d0 = vertical ? s.top : s.left;\n  const d1 = vertical ? s.bottom : s.right;\n\n  return [d0, d1];\n}\n\nexport function isNotValidTouch({\n  type = '',\n  touches,\n}: {\n  type: string;\n  touches: TouchEvent['touches'];\n}) {\n  return (\n    !touches ||\n    touches.length > 1 ||\n    (type.toLowerCase() === 'touchend' && touches.length > 0)\n  );\n}\n\nexport function getTouchPosition(\n  vertical: boolean,\n  e: React.TouchEvent | TouchEvent\n) {\n  return vertical ? e.touches[0].clientY : e.touches[0].pageX;\n}\n\nexport function getHandles(\n  values: number[] = [],\n  reversed: boolean,\n  valueToStep: DiscreteScale,\n  warn: boolean\n) {\n  let changes = 0;\n\n  const handles = values\n    .map(x => {\n      const val = valueToStep.getValue(x);\n\n      if (x !== val) {\n        changes += 1;\n        warning(\n          !warn,\n          `${prfx} Invalid value encountered. Changing ${x} to ${val}.`\n        );\n      }\n\n      return val;\n    })\n    .map((val, i) => ({ key: `$$-${i}`, val }))\n    .sort(getSortByVal(reversed));\n\n  return { handles, changes };\n}\n","import { getUpdatedHandles } from './utils';\nimport { HandleItem } from '../types';\n\n// default mode\nexport function mode1(_: HandleItem[], next: HandleItem[]) {\n  return next;\n}\n\n// prevent duplicate values and crossing\nexport function mode2(curr: HandleItem[], next: HandleItem[]) {\n  for (let i = 0; i < curr.length; i++) {\n    if (curr[i].key !== next[i].key) {\n      return curr;\n    }\n\n    if (next[i + 1] && next[i].val === next[i + 1].val) {\n      return curr;\n    }\n  }\n\n  return next;\n}\n\n// pushable mode\nexport function mode3(\n  curr: HandleItem[],\n  next: HandleItem[],\n  step: number,\n  reversed: boolean,\n  getValue: (x: number) => number\n): HandleItem[] {\n  let indexForMovingHandle = -1;\n  let handleMoveIsPositive = true;\n\n  for (let i = 0; i < curr.length; i++) {\n    const c = curr[i];\n    const n = next[i];\n\n    // make sure keys are in same order if not return curr\n    if (!n || n.key !== c.key) {\n      return curr;\n    } else if (n.val !== c.val) {\n      indexForMovingHandle = i;\n      handleMoveIsPositive = n.val - c.val > 0;\n    }\n  }\n\n  // nothing has changed (shouldn't happen but just in case).\n  if (indexForMovingHandle === -1) {\n    return curr;\n  } else {\n    const increment = handleMoveIsPositive ? step : -step;\n\n    for (let i = 0; i < next.length; i++) {\n      const n0 = next[i];\n      const n1 = next[i + 1];\n\n      if (n1 && n0.val === n1.val) {\n        if (i === indexForMovingHandle) {\n          const newStep = n1.val + increment;\n          if (getValue(newStep) === newStep) {\n            const clone = getUpdatedHandles(\n              next,\n              n1.key,\n              n1.val + increment,\n              reversed\n            );\n            const check = mode3(next, clone, step, reversed, getValue);\n\n            if (check === next) {\n              return curr;\n            } else {\n              return check;\n            }\n          } else {\n            return curr;\n          }\n        } else {\n          const newStep = n0.val + increment;\n          if (getValue(newStep) === newStep) {\n            const clone = getUpdatedHandles(\n              next,\n              n0.key,\n              n0.val + increment,\n              reversed\n            );\n            const check = mode3(next, clone, step, reversed, getValue);\n\n            if (check === next) {\n              return curr;\n            } else {\n              return check;\n            }\n          } else {\n            return curr;\n          }\n        }\n      }\n    }\n  }\n\n  return next;\n}\n","export function callAll<T>(...fns: (((e: T) => void) | undefined)[]) {\n  return (e: T) => {\n    return fns.forEach(fn => fn && fn(e));\n  };\n}\n","import React, { Component } from 'react';\nimport { callAll } from '../utils';\n\nimport { RailProps, RailEventHandlers } from './types';\n\nexport class Rail<T extends RailEventHandlers> extends Component<RailProps> {\n  getRailProps = (props?: Partial<T>) => {\n    const { emitMouse, emitTouch } = this.props;\n\n    return {\n      ...props,\n      onMouseDown: callAll<React.MouseEvent<Element>>(\n        props && props.onMouseDown,\n        emitMouse\n      ),\n      onTouchStart: callAll(props && props.onTouchStart, emitTouch),\n    };\n  };\n\n  render() {\n    const {\n      getRailProps,\n      props: { getEventData, activeHandleID = '', children },\n    } = this;\n\n    const renderedChildren = children({\n      //@ts-ignore\n      getEventData,\n      activeHandleID,\n      getRailProps,\n    });\n    return renderedChildren && React.Children.only(renderedChildren);\n  }\n}\n","import React, { Component } from 'react';\nimport { callAll } from '../utils';\n\nimport { HandlesProps, HandleEventHandlers as HE } from './types';\n\nexport class Handles<T extends HE = HE> extends Component<HandlesProps> {\n  autofocus = (e: React.MouseEvent<Element>) => {\n    if (e.target instanceof HTMLElement) {\n      e.target.focus();\n    }\n  };\n\n  getHandleProps = (id: string, props?: Partial<T>) => {\n    const { emitKeyboard, emitMouse, emitTouch } = this.props;\n\n    return {\n      ...props,\n      onKeyDown: callAll<React.KeyboardEvent<Element>>(\n        props && props.onKeyDown,\n        //@ts-ignore\n        (e: React.KeyboardEvent<Element>) => emitKeyboard(e, id)\n      ),\n      onMouseDown: callAll<React.MouseEvent<Element>>(\n        props && props.onMouseDown,\n        this.autofocus,\n        //@ts-ignore\n        (e: React.MouseEvent) => emitMouse(e, id)\n      ),\n      onTouchStart: callAll<React.TouchEvent<Element>>(\n        props && props.onTouchStart,\n        //@ts-ignore\n        (e: React.TouchEvent<Element>) => emitTouch(e, id)\n      ),\n    };\n  };\n\n  render() {\n    const {\n      getHandleProps,\n      props: { activeHandleID = '', children, handles = [] },\n    } = this;\n\n    const renderedChildren = children({\n      handles,\n      activeHandleID,\n      getHandleProps,\n    });\n\n    return renderedChildren && React.Children.only(renderedChildren);\n  }\n}\n","import { ticks } from 'd3-array';\n\nimport { Interpolator } from '../types';\n\nexport class LinearScale {\n  interpolator: Interpolator | null;\n  domain: number[] = [0, 1];\n  range: number[] = [0, 1];\n\n  constructor() {\n    this.domain = [0, 1];\n    this.range = [0, 1];\n    this.interpolator = null;\n  }\n\n  createInterpolator(domain: number[], range: number[]) {\n    const d0 = domain[0];\n    const d1 = domain[1];\n\n    const r0 = range[0];\n    const r1 = range[1];\n\n    if (d1 < d0) {\n      return (x: number) =>\n        this.interpolateValue(r1, r0)(this.deinterpolateValue(d1, d0)(x));\n    } else {\n      return (x: number) =>\n        this.interpolateValue(r0, r1)(this.deinterpolateValue(d0, d1)(x));\n    }\n  }\n\n  interpolateValue(a: number, b: number) {\n    return (\n      (a = +a),\n      (b -= a),\n      function i(t: number) {\n        return a + b * t;\n      }\n    );\n  }\n\n  deinterpolateValue(a: number, b: number) {\n    return (b -= a = +a) ? (x: number) => (x - a) / b : () => b;\n  }\n\n  rescale() {\n    this.interpolator = null;\n\n    return this;\n  }\n\n  getValue(x: number) {\n    const { domain, range } = this;\n\n    return (\n      this.interpolator ||\n      (this.interpolator = this.createInterpolator(domain, range))\n    )(+x);\n  }\n\n  setDomain(val: number[]) {\n    this.domain = [val[0], val[1]];\n\n    this.rescale();\n\n    return this;\n  }\n\n  getDomain() {\n    return this.domain;\n  }\n\n  setRange(val: number[]) {\n    this.range = [val[0], val[1]];\n\n    return this;\n  }\n\n  getTicks(count: number) {\n    const d = this.domain;\n    return ticks(d[0], d[d.length - 1], count ? count : 10);\n  }\n}\n","import React from 'react';\n\nimport { TicksProps } from './types';\nimport { LinearScale } from '../scales/LinearScale';\n\nconst defaultGetEventData = () => ({ value: 0, percent: 0 });\n\nexport const Ticks: React.FC<TicksProps> = React.memo(\n  ({\n    children,\n    values,\n    scale = new LinearScale(),\n    count = 10,\n    getEventData = defaultGetEventData,\n    activeHandleID = '',\n  }) => {\n    const ticks = (values ? values : scale.getTicks(count)).map(value => ({\n      id: `$$-${value}`,\n      value,\n      percent: scale.getValue(value),\n    }));\n\n    return children({ getEventData, activeHandleID, ticks });\n  }\n);\n","import React, { Component } from 'react';\n\nimport { callAll } from '../utils';\nimport { LinearScale } from '../scales/LinearScale';\nimport { TracksProps } from './types';\nimport { OtherProps } from '../types';\n\nconst defaultGetEventData = () => ({ value: 0, percent: 0 });\n\nexport class Tracks extends Component<TracksProps> {\n  getTrackProps = (props?: OtherProps) => {\n    const { emitMouse, emitTouch } = this.props;\n\n    return {\n      ...(props || {}),\n      onMouseDown: callAll<React.MouseEvent<Element>>(\n        props && props.onMouseDown,\n        emitMouse\n      ),\n      onTouchStart: callAll<React.TouchEvent<Element>>(\n        props && props.onTouchStart,\n        emitTouch\n      ),\n    };\n  };\n\n  render() {\n    const {\n      getTrackProps,\n      props: {\n        children,\n        left = true,\n        right = true,\n        scale = new LinearScale(),\n        handles = [],\n        getEventData = defaultGetEventData,\n        activeHandleID = '',\n      },\n    } = this;\n\n    const domain = scale.getDomain();\n    const tracks = [];\n\n    for (let i = 0; i < handles.length + 1; i++) {\n      let source = handles[i - 1];\n      let target = handles[i];\n\n      if (i === 0 && left === true) {\n        source = { id: '$', value: domain[0], percent: 0 };\n      } else if (i === handles.length && right === true) {\n        target = { id: '$', value: domain[1], percent: 100 };\n      }\n\n      if (source && target) {\n        tracks.push({\n          id: `${source.id}-${target.id}`,\n          source,\n          target,\n        });\n      }\n    }\n\n    const renderedChildren = children({\n      getEventData,\n      activeHandleID,\n      tracks,\n      getTrackProps,\n    });\n\n    return renderedChildren && React.Children.only(renderedChildren);\n  }\n}\n","function clamp(value: number, min: number, max: number) {\n  return Math.min(Math.max(value, min), max);\n}\n\nexport class DiscreteScale {\n  step: number = 1;\n  domain: number[] = [0, 1];\n  range: number[] = [0, 1];\n\n  setDomain = (val: number[]) => {\n    this.domain = [val[0], val[1]];\n\n    return this;\n  };\n\n  setRange = (val: number[]) => {\n    this.range = [val[0], val[1]];\n\n    return this;\n  };\n\n  setStep = (val: number) => {\n    this.step = val;\n\n    return this;\n  };\n\n  getValue = (x: number) => {\n    const {\n      domain: [d0, d1],\n      range: [r0, r1],\n      step,\n    } = this;\n\n    const p = (clamp(x, d0, d1) - d0) / (d1 - d0);\n    const b = step * Math.round((p * (r1 - r0)) / step) + r0;\n\n    return clamp(b, r0 < r1 ? r0 : r1, r1 > r0 ? r1 : r0);\n  };\n}\n","import React, { PureComponent } from 'react';\nimport warning from 'warning';\nimport { mode1, mode2, mode3 } from './modes';\nimport {\n  isNotValidTouch,\n  getTouchPosition,\n  getUpdatedHandles,\n  getSliderDomain,\n  getHandles,\n  prfx,\n} from './utils';\nimport { Rail } from '../Rail';\nimport { Handles } from '../Handles';\nimport { Ticks } from '../Ticks';\nimport { Tracks } from '../Tracks';\nimport { LinearScale } from '../scales/LinearScale';\nimport { DiscreteScale } from '../scales/DiscreteScale';\n\nimport { SliderProps, SliderState } from './types';\nimport { HandleItem } from '../types';\n\nconst isBrowser =\n  typeof window !== 'undefined' && typeof document !== 'undefined';\n\nconst noop = () => {};\n\nconst compare = (b: any[]) => (m: any, d: any, i: number) => m && b[i] === d;\n\nconst equal = (a: any, b: any) => {\n  return a === b || (a.length === b.length && a.reduce(compare(b), true));\n};\n\ninterface RCSComponent {\n  type: {\n    name: 'Rail' | 'Handles' | 'Ticks' | 'Tracks';\n  };\n}\n\nconst isRCSComponent = (item: React.ReactNode): item is RCSComponent => {\n  const type = (item as RCSComponent).type;\n  const name = type ? type.name : '';\n\n  return (\n    name === Handles.name ||\n    name === Rail.name ||\n    name === Ticks.name ||\n    name === Tracks.name\n  );\n};\n\nconst getNextValue = (\n  curr: number,\n  step: number,\n  domain: number[],\n  reversed: boolean\n) => {\n  const newVal = reversed ? curr - step : curr + step;\n  return reversed ? Math.max(domain[0], newVal) : Math.min(domain[1], newVal);\n};\n\nconst getPrevValue = (\n  curr: number,\n  step: number,\n  domain: number[],\n  reversed: boolean\n) => {\n  const newVal = reversed ? curr + step : curr - step;\n  return reversed ? Math.min(domain[1], newVal) : Math.max(domain[0], newVal);\n};\n\nexport class Slider<\n  T extends HTMLDivElement = HTMLDivElement\n> extends PureComponent<SliderProps, SliderState> {\n  state = {\n    step: 0.1,\n    values: [],\n    domain: [0, 100],\n    handles: [] as HandleItem[],\n    reversed: false,\n    activeHandleID: '',\n    valueToPerc: null,\n    valueToStep: null,\n    pixelToStep: null,\n    document: document,\n  };\n\n  slider = React.createRef<T>();\n\n  static getDerivedStateFromProps(\n    nextProps: SliderProps,\n    prevState: SliderState\n  ) {\n    const {\n      step = 0.1,\n      values,\n      domain = [0, 100] as number[],\n      reversed = false,\n      onUpdate = noop,\n      onChange = noop,\n      warnOnChanges = false,\n    } = nextProps;\n\n    let valueToPerc = prevState.valueToPerc;\n    let valueToStep = prevState.valueToStep;\n    let pixelToStep = prevState.pixelToStep;\n\n    const nextState: Partial<SliderState> = {};\n\n    if (!valueToPerc || !valueToStep || !pixelToStep) {\n      valueToPerc = new LinearScale();\n      valueToStep = new DiscreteScale();\n      pixelToStep = new DiscreteScale();\n\n      nextState.valueToPerc = valueToPerc;\n      nextState.valueToStep = valueToStep;\n      nextState.pixelToStep = pixelToStep;\n    }\n\n    if (\n      prevState.step === null ||\n      prevState.domain === null ||\n      prevState.reversed === null ||\n      step !== prevState.step ||\n      domain[0] !== prevState.domain[0] ||\n      domain[1] !== prevState.domain[1] ||\n      reversed !== prevState.reversed\n    ) {\n      const [min, max] = domain;\n\n      valueToStep\n        .setStep(step)\n        .setRange([min, max])\n        .setDomain([min, max]);\n\n      if (reversed === true) {\n        valueToPerc.setDomain([min, max]).setRange([100, 0]);\n        pixelToStep.setStep(step).setRange([max, min]);\n      } else {\n        valueToPerc.setDomain([min, max]).setRange([0, 100]);\n        pixelToStep.setStep(step).setRange([min, max]);\n      }\n\n      warning(\n        max > min,\n        `${prfx} Max must be greater than min (even if reversed). Max is ${max}. Min is ${min}.`\n      );\n\n      const { handles, changes } = getHandles(\n        values || prevState.values,\n        reversed,\n        valueToStep,\n        warnOnChanges\n      );\n\n      if (changes || values === undefined || values === prevState.values) {\n        onUpdate(handles.map(d => d.val));\n        onChange(handles.map(d => d.val));\n      }\n\n      nextState.step = step;\n      nextState.values = values;\n      nextState.domain = domain;\n      nextState.handles = handles;\n      nextState.reversed = reversed;\n    } else if (!equal(values, prevState.values)) {\n      const { handles, changes } = getHandles(\n        values,\n        reversed,\n        valueToStep,\n        warnOnChanges\n      );\n\n      if (changes) {\n        onUpdate(handles.map(d => d.val));\n        onChange(handles.map(d => d.val));\n      }\n\n      nextState.values = values;\n      nextState.handles = handles;\n    }\n\n    if (Object.keys(nextState).length) {\n      return nextState;\n    }\n\n    return null;\n  }\n\n  componentDidMount() {\n    const { pixelToStep } = this.state;\n    const { vertical } = this.props;\n\n    // @ts-ignore\n    pixelToStep.setDomain(getSliderDomain(this.slider.current, vertical));\n  }\n\n  componentWillUnmount() {\n    this.removeListeners();\n  }\n\n  removeListeners() {\n    const doc = this.props.document || document;\n    if (isBrowser) {\n      doc.removeEventListener('mousemove', this.onMouseMove);\n      doc.removeEventListener('mouseup', this.onMouseUp);\n      doc.removeEventListener('touchmove', this.onTouchMove);\n      doc.removeEventListener('touchend', this.onTouchEnd);\n    }\n  }\n\n  onKeyDown = (e: KeyboardEvent, handleID: string) => {\n    let validUpKeys = ['ArrowRight', 'ArrowUp'];\n    let validDownKeys = ['ArrowDown', 'ArrowLeft'];\n\n    const {\n      state: { handles },\n      props: {\n        step = 0.1,\n        reversed = false,\n        vertical = false,\n        domain = [0, 100] as number[],\n      },\n    } = this;\n    const key = e.key || `${e.keyCode}`;\n\n    if (!validUpKeys.concat(validDownKeys).includes(key)) {\n      return;\n    }\n\n    if (vertical) {\n      [validUpKeys, validDownKeys] = [validDownKeys, validUpKeys];\n    }\n\n    e.stopPropagation && e.stopPropagation();\n    e.preventDefault && e.preventDefault();\n\n    const found = handles.find(value => {\n      return value.key === handleID;\n    });\n\n    if (!found) {\n      return;\n    }\n\n    const currVal = found.val;\n    let newVal = currVal;\n\n    if (validUpKeys.includes(key)) {\n      newVal = getNextValue(currVal, step, domain, reversed);\n    } else if (validDownKeys.includes(key)) {\n      newVal = getPrevValue(currVal, step, domain, reversed);\n    }\n    const nextHandles = handles.map(v =>\n      v.key === handleID ? { key: v.key, val: newVal } : v\n    );\n\n    this.submitUpdate(nextHandles, true);\n  };\n\n  onMouseDown = (e: MouseEvent, handleID: string) => {\n    this.onStart(e, handleID, false);\n  };\n\n  onTouchStart = (e: TouchEvent, handleID: string) => {\n    if (isNotValidTouch(e)) {\n      return;\n    }\n\n    this.onStart(e, handleID, true);\n  };\n\n  onStart(e: MouseEvent | TouchEvent, handleID: string, isTouch: boolean) {\n    const {\n      state: { handles },\n      props: { onSlideStart = noop },\n    } = this;\n\n    if (!isTouch) {\n      e.preventDefault && e.preventDefault();\n    }\n\n    e.stopPropagation && e.stopPropagation();\n\n    const found = handles.find(value => {\n      return value.key === handleID;\n    });\n\n    if (found) {\n      this.setState({ activeHandleID: handleID });\n      onSlideStart(\n        handles.map(d => d.val),\n        { activeHandleID: handleID }\n      );\n      isTouch ? this.addTouchEvents() : this.addMouseEvents();\n    } else {\n      this.setState({ activeHandleID: '' });\n      this.handleRailAndTrackClicks(e, isTouch);\n    }\n  }\n\n  handleRailAndTrackClicks(e: MouseEvent | TouchEvent, isTouch: boolean) {\n    const {\n      state: { handles: curr, pixelToStep },\n      props: { vertical, reversed = false },\n    } = this;\n    const { slider } = this;\n\n    // double check the dimensions of the slider\n    // @ts-ignore\n    pixelToStep.setDomain(getSliderDomain(slider.current, vertical));\n\n    // find the closest value (aka step) to the event location\n    let updateValue: number;\n\n    if (isTouch) {\n      // @ts-ignore\n      updateValue = pixelToStep.getValue(getTouchPosition(vertical, e));\n    } else {\n      // @ts-ignore\n      updateValue = pixelToStep.getValue(vertical ? e.clientY : e.pageX);\n    }\n\n    // find the closest handle key\n    let updateKey = '';\n    let minDiff = Infinity;\n\n    for (let i = 0; i < curr.length; i++) {\n      const { key, val } = curr[i];\n      const diff = Math.abs(val - updateValue);\n\n      if (diff < minDiff) {\n        updateKey = key;\n        minDiff = diff;\n      }\n    }\n\n    // generate a \"candidate\" set of values - a suggestion of what to do\n    const nextHandles = getUpdatedHandles(\n      curr,\n      updateKey,\n      updateValue,\n      reversed\n    );\n\n    // submit the candidate values\n    this.setState({ activeHandleID: updateKey }, () => {\n      this.submitUpdate(nextHandles, true);\n      isTouch ? this.addTouchEvents() : this.addMouseEvents();\n    });\n  }\n\n  getEventData = (e: React.MouseEvent | React.TouchEvent, isTouch: boolean) => {\n    const {\n      state: { pixelToStep, valueToPerc },\n      props: { vertical },\n    } = this;\n\n    // double check the dimensions of the slider\n    // @ts-ignore\n    pixelToStep.setDomain(getSliderDomain(this.slider.current, vertical));\n\n    let value;\n\n    if (isTouch && e instanceof TouchEvent) {\n      // @ts-ignore\n      value = pixelToStep.getValue(getTouchPosition(vertical, e));\n    } else if (e instanceof MouseEvent) {\n      // @ts-ignore\n      value = pixelToStep.getValue(vertical ? e.clientY : e.pageX);\n    }\n    return {\n      value,\n      // @ts-ignore\n      percent: valueToPerc.getValue(value),\n    };\n  };\n\n  addMouseEvents() {\n    if (isBrowser) {\n      const doc = this.props.document || document;\n      doc.addEventListener('mousemove', this.onMouseMove);\n      doc.addEventListener('mouseup', this.onMouseUp);\n    }\n  }\n\n  addTouchEvents() {\n    if (isBrowser) {\n      const doc = this.props.document || document;\n      doc.addEventListener('touchmove', this.onTouchMove);\n      doc.addEventListener('touchend', this.onTouchEnd);\n    }\n  }\n\n  onMouseMove = (e: MouseEvent) => {\n    const {\n      state: { handles: curr, pixelToStep, activeHandleID = '' },\n      props: { vertical, reversed = false },\n    } = this;\n    // double check the dimensions of the slider\n    // @ts-ignore\n    pixelToStep.setDomain(getSliderDomain(this.slider.current, vertical));\n\n    // find the closest value (aka step) to the event location\n    // @ts-ignore\n    const updateValue = pixelToStep.getValue(vertical ? e.clientY : e.pageX);\n\n    // generate a \"candidate\" set of values - a suggestion of what to do\n    const nextHandles = getUpdatedHandles(\n      curr,\n      activeHandleID,\n      updateValue,\n      reversed\n    );\n\n    // submit the candidate values\n    this.submitUpdate(nextHandles);\n  };\n\n  onTouchMove = (e: TouchEvent) => {\n    const {\n      state: { handles: curr, pixelToStep, activeHandleID },\n      props: { vertical, reversed },\n    } = this;\n    if (pixelToStep === null || isNotValidTouch(e)) {\n      return;\n    }\n\n    // double check the dimensions of the slider\n    // @ts-ignore\n    pixelToStep.setDomain(getSliderDomain(this.slider.current, vertical));\n\n    // find the closest value (aka step) to the event location\n    // @ts-ignore\n    const updateValue = pixelToStep.getValue(getTouchPosition(vertical, e));\n\n    // generate a \"candidate\" set of values - a suggestion of what to do\n    const nextHandles = getUpdatedHandles(\n      curr,\n      activeHandleID,\n      updateValue,\n      reversed\n    );\n\n    // submit the candidate values\n    this.submitUpdate(nextHandles);\n  };\n\n  submitUpdate(next: HandleItem[], callOnChange = false) {\n    const {\n      mode = 1,\n      step = 0.1,\n      onUpdate = noop,\n      onChange = noop,\n      reversed = false,\n    } = this.props;\n    //@ts-ignore\n    const { getValue } = this.state.valueToStep;\n\n    this.setState(({ handles: curr }) => {\n      let handles: HandleItem[] = [];\n\n      // given the current handles and a candidate set, decide what to do\n      if (typeof mode === 'function') {\n        handles = mode(curr, next, step, reversed, getValue);\n        warning(\n          Array.isArray(handles),\n          'Custom mode function did not return an array.'\n        );\n      } else {\n        switch (mode) {\n          case 1:\n            handles = mode1(curr, next);\n            break;\n          case 2:\n            handles = mode2(curr, next);\n            break;\n          case 3:\n            handles = mode3(curr, next, step, reversed, getValue);\n            break;\n          default:\n            handles = next;\n            warning(false, `${prfx} Invalid mode value.`);\n        }\n      }\n\n      onUpdate(handles.map(d => d.val));\n\n      if (callOnChange) {\n        onChange(handles.map(d => d.val));\n      }\n\n      return { handles };\n    });\n  }\n\n  onMouseUp = () => {\n    const {\n      state: { handles = [], activeHandleID },\n      props: { onChange = noop, onSlideEnd = noop },\n    } = this;\n\n    onChange(handles.map(d => d.val));\n    onSlideEnd(\n      handles.map(d => d.val),\n      { activeHandleID }\n    );\n\n    this.setState({ activeHandleID: '' });\n\n    if (isBrowser) {\n      const doc = this.props.document || document;\n      doc.removeEventListener('mousemove', this.onMouseMove);\n      doc.removeEventListener('mouseup', this.onMouseUp);\n    }\n  };\n\n  onTouchEnd = () => {\n    const {\n      state: { handles, activeHandleID },\n      props: { onChange = noop, onSlideEnd = noop },\n    } = this;\n\n    onChange(handles.map(d => d.val));\n    onSlideEnd(\n      handles.map(d => d.val),\n      { activeHandleID }\n    );\n\n    this.setState({ activeHandleID: '' });\n\n    if (isBrowser) {\n      const doc = this.props.document || document;\n      doc.removeEventListener('touchmove', this.onTouchMove);\n      doc.removeEventListener('touchend', this.onTouchEnd);\n    }\n  };\n\n  render() {\n    const {\n      state: { handles, valueToPerc, activeHandleID },\n      props: {\n        className,\n        rootStyle = {},\n        rootProps = {},\n        component: Comp = 'div',\n        disabled = false,\n        flatten = false,\n      },\n    } = this;\n\n    const mappedHandles = handles.map(({ key, val }) => {\n      // @ts-ignore\n      return { id: key, value: val, percent: valueToPerc.getValue(val) };\n    });\n\n    const children = React.Children.map(this.props.children, child => {\n      if (isRCSComponent(child)) {\n        return React.cloneElement(child as React.ReactElement, {\n          scale: valueToPerc,\n          handles: mappedHandles,\n          activeHandleID,\n          getEventData: this.getEventData,\n          emitKeyboard: disabled ? noop : this.onKeyDown,\n          emitMouse: disabled ? noop : this.onMouseDown,\n          emitTouch: disabled ? noop : this.onTouchStart,\n        });\n      } else {\n        return child;\n      }\n    });\n\n    return flatten ? (\n      <>\n        {React.createElement(Comp, {\n          ...rootProps,\n          style: rootStyle,\n          className: className,\n          ref: this.slider,\n        })}\n        {children}\n      </>\n    ) : (\n      <>\n        {React.createElement(\n          Comp,\n          {\n            ...rootProps,\n            style: rootStyle,\n            className: className,\n            ref: this.slider,\n          },\n          children\n        )}\n      </>\n    );\n  }\n}\n"],"names":["prfx","getSortByVal","reversed","sortByVal","a","b","val","getUpdatedHandles","handles","updateKey","updateValue","index","findIndex","v","key","slice","sort","getSliderDomain","slider","vertical","s","getBoundingClientRect","d0","top","left","d1","bottom","right","isNotValidTouch","type","touches","length","toLowerCase","getTouchPosition","e","clientY","pageX","getHandles","values","valueToStep","warn","changes","map","x","getValue","warning","i","mode1","_","next","mode2","curr","mode3","step","indexForMovingHandle","handleMoveIsPositive","c","n","increment","n0","n1","newStep","clone","check","callAll","fns","forEach","fn","Rail","getRailProps","props","emitMouse","emitTouch","onMouseDown","onTouchStart","getEventData","activeHandleID","children","renderedChildren","React","Children","only","Component","Handles","autofocus","target","HTMLElement","focus","getHandleProps","id","emitKeyboard","onKeyDown","LinearScale","interpolator","domain","range","r0","r1","interpolateValue","deinterpolateValue","t","createInterpolator","rescale","count","d","ticks","defaultGetEventData","value","percent","Ticks","memo","scale","getTicks","Tracks","getTrackProps","getDomain","tracks","source","push","clamp","min","max","Math","DiscreteScale","setDomain","setRange","setStep","p","round","isBrowser","window","document","noop","compare","m","equal","reduce","isRCSComponent","item","name","getNextValue","newVal","getPrevValue","Slider","state","valueToPerc","pixelToStep","createRef","handleID","validUpKeys","validDownKeys","keyCode","concat","includes","stopPropagation","preventDefault","found","find","currVal","nextHandles","submitUpdate","onStart","isTouch","current","TouchEvent","MouseEvent","onMouseMove","onTouchMove","onMouseUp","onChange","onSlideEnd","setState","doc","removeEventListener","onTouchEnd","removeListeners","onSlideStart","addTouchEvents","addMouseEvents","handleRailAndTrackClicks","minDiff","Infinity","diff","abs","addEventListener","callOnChange","mode","onUpdate","Array","isArray","className","rootStyle","rootProps","component","Comp","disabled","flatten","mappedHandles","child","cloneElement","createElement","style","ref","nextProps","prevState","warnOnChanges","nextState","undefined","Object","keys","PureComponent"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAMO,IAAMA,IAAI,GAAG,wBAAb;AAEA,SAASC,YAAT,GAAiD;AAAA,MAA3BC,QAA2B,uEAAP,KAAO;AACtD,SAAO,SAASC,SAAT,CAAmBC,CAAnB,EAAkCC,CAAlC,EAAiD;AACtD,QAAID,CAAC,CAACE,GAAF,GAAQD,CAAC,CAACC,GAAd,EAAmB;AACjB,aAAOJ,QAAQ,GAAG,CAAC,CAAJ,GAAQ,CAAvB;AACD;;AAED,QAAIG,CAAC,CAACC,GAAF,GAAQF,CAAC,CAACE,GAAd,EAAmB;AACjB,aAAOJ,QAAQ,GAAG,CAAH,GAAO,CAAC,CAAvB;AACD;;AAED,WAAO,CAAP;AACD,GAVD;AAWD;AAEM,SAASK,iBAAT,CACLC,OADK,EAELC,SAFK,EAGLC,WAHK,EAKL;AAAA,MADAR,QACA,uEADoB,KACpB;AACA,MAAMS,KAAK,GAAGH,OAAO,CAACI,SAAR,CAAkB,UAAAC,CAAC;AAAA,WAAIA,CAAC,CAACC,GAAF,KAAUL,SAAd;AAAA,GAAnB,CAAd;;AAEA,MAAIE,KAAK,KAAK,CAAC,CAAf,EAAkB;AAAA,yBACKH,OAAO,CAACG,KAAD,CADZ;AAAA,QACRG,GADQ,kBACRA,GADQ;AAAA,QACHR,GADG,kBACHA,GADG;;AAGhB,QAAIA,GAAG,KAAKI,WAAZ,EAAyB;AACvB,aAAOF,OAAP;AACD;;AAED,WAAO,6BACFA,OAAO,CAACO,KAAR,CAAc,CAAd,EAAiBJ,KAAjB,CADE,IAEL;AAAEG,MAAAA,GAAG,EAAHA,GAAF;AAAOR,MAAAA,GAAG,EAAEI;AAAZ,KAFK,sBAGFF,OAAO,CAACO,KAAR,CAAcJ,KAAK,GAAG,CAAtB,CAHE,GAILK,IAJK,CAIAf,YAAY,CAACC,QAAD,CAJZ,CAAP;AAKD;;AAED,SAAOM,OAAP;AACD;AAEM,SAASS,eAAT,CAAyBC,MAAzB,EAAiDC,QAAjD,EAAoE;AACzE,MAAI,CAACD,MAAL,EAAa;AACX,WAAO,CAAC,CAAD,EAAI,CAAJ,CAAP;AACD;;AAED,MAAME,CAAC,GAAGF,MAAM,CAACG,qBAAP,EAAV;AAEA,MAAMC,EAAE,GAAGH,QAAQ,GAAGC,CAAC,CAACG,GAAL,GAAWH,CAAC,CAACI,IAAhC;AACA,MAAMC,EAAE,GAAGN,QAAQ,GAAGC,CAAC,CAACM,MAAL,GAAcN,CAAC,CAACO,KAAnC;AAEA,SAAO,CAACL,EAAD,EAAKG,EAAL,CAAP;AACD;AAEM,SAASG,eAAT,OAMJ;AAAA,uBALDC,IAKC;AAAA,MALDA,IAKC,0BALM,EAKN;AAAA,MAJDC,OAIC,QAJDA,OAIC;AACD,SACE,CAACA,OAAD,IACAA,OAAO,CAACC,MAAR,GAAiB,CADjB,IAECF,IAAI,CAACG,WAAL,OAAuB,UAAvB,IAAqCF,OAAO,CAACC,MAAR,GAAiB,CAHzD;AAKD;AAEM,SAASE,gBAAT,CACLd,QADK,EAELe,CAFK,EAGL;AACA,SAAOf,QAAQ,GAAGe,CAAC,CAACJ,OAAF,CAAU,CAAV,EAAaK,OAAhB,GAA0BD,CAAC,CAACJ,OAAF,CAAU,CAAV,EAAaM,KAAtD;AACD;AAEM,SAASC,UAAT,GAKL;AAAA,MAJAC,MAIA,uEAJmB,EAInB;AAAA,MAHApC,QAGA;AAAA,MAFAqC,WAEA;AAAA,MADAC,IACA;AACA,MAAIC,OAAO,GAAG,CAAd;AAEA,MAAMjC,OAAO,GAAG8B,MAAM,CACnBI,GADa,CACT,UAAAC,CAAC,EAAI;AACR,QAAMrC,GAAG,GAAGiC,WAAW,CAACK,QAAZ,CAAqBD,CAArB,CAAZ;;AAEA,QAAIA,CAAC,KAAKrC,GAAV,EAAe;AACbmC,MAAAA,OAAO,IAAI,CAAX;AACAI,MAAAA,OAAO,CACL,CAACL,IADI,YAEFxC,IAFE,kDAE0C2C,CAF1C,iBAEkDrC,GAFlD,OAAP;AAID;;AAED,WAAOA,GAAP;AACD,GAba,EAcboC,GAda,CAcT,UAACpC,GAAD,EAAMwC,CAAN;AAAA,WAAa;AAAEhC,MAAAA,GAAG,eAAQgC,CAAR,CAAL;AAAkBxC,MAAAA,GAAG,EAAHA;AAAlB,KAAb;AAAA,GAdS,EAebU,IAfa,CAeRf,YAAY,CAACC,QAAD,CAfJ,CAAhB;AAiBA,SAAO;AAAEM,IAAAA,OAAO,EAAPA,OAAF;AAAWiC,IAAAA,OAAO,EAAPA;AAAX,GAAP;AACD;;ACxGD;AACA,AAAO,SAASM,KAAT,CAAeC,CAAf,EAAgCC,IAAhC,EAAoD;AACzD,SAAOA,IAAP;AACD;;AAGD,AAAO,SAASC,KAAT,CAAeC,IAAf,EAAmCF,IAAnC,EAAuD;AAC5D,OAAK,IAAIH,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGK,IAAI,CAACpB,MAAzB,EAAiCe,CAAC,EAAlC,EAAsC;AACpC,QAAIK,IAAI,CAACL,CAAD,CAAJ,CAAQhC,GAAR,KAAgBmC,IAAI,CAACH,CAAD,CAAJ,CAAQhC,GAA5B,EAAiC;AAC/B,aAAOqC,IAAP;AACD;;AAED,QAAIF,IAAI,CAACH,CAAC,GAAG,CAAL,CAAJ,IAAeG,IAAI,CAACH,CAAD,CAAJ,CAAQxC,GAAR,KAAgB2C,IAAI,CAACH,CAAC,GAAG,CAAL,CAAJ,CAAYxC,GAA/C,EAAoD;AAClD,aAAO6C,IAAP;AACD;AACF;;AAED,SAAOF,IAAP;AACD;;AAGD,AAAO,SAASG,KAAT,CACLD,IADK,EAELF,IAFK,EAGLI,IAHK,EAILnD,QAJK,EAKL0C,QALK,EAMS;AACd,MAAIU,oBAAoB,GAAG,CAAC,CAA5B;AACA,MAAIC,oBAAoB,GAAG,IAA3B;;AAEA,OAAK,IAAIT,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGK,IAAI,CAACpB,MAAzB,EAAiCe,CAAC,EAAlC,EAAsC;AACpC,QAAMU,CAAC,GAAGL,IAAI,CAACL,CAAD,CAAd;AACA,QAAMW,CAAC,GAAGR,IAAI,CAACH,CAAD,CAAd,CAFoC;;AAKpC,QAAI,CAACW,CAAD,IAAMA,CAAC,CAAC3C,GAAF,KAAU0C,CAAC,CAAC1C,GAAtB,EAA2B;AACzB,aAAOqC,IAAP;AACD,KAFD,MAEO,IAAIM,CAAC,CAACnD,GAAF,KAAUkD,CAAC,CAAClD,GAAhB,EAAqB;AAC1BgD,MAAAA,oBAAoB,GAAGR,CAAvB;AACAS,MAAAA,oBAAoB,GAAGE,CAAC,CAACnD,GAAF,GAAQkD,CAAC,CAAClD,GAAV,GAAgB,CAAvC;AACD;AACF,GAfa;;;AAkBd,MAAIgD,oBAAoB,KAAK,CAAC,CAA9B,EAAiC;AAC/B,WAAOH,IAAP;AACD,GAFD,MAEO;AACL,QAAMO,SAAS,GAAGH,oBAAoB,GAAGF,IAAH,GAAU,CAACA,IAAjD;;AAEA,SAAK,IAAIP,EAAC,GAAG,CAAb,EAAgBA,EAAC,GAAGG,IAAI,CAAClB,MAAzB,EAAiCe,EAAC,EAAlC,EAAsC;AACpC,UAAMa,EAAE,GAAGV,IAAI,CAACH,EAAD,CAAf;AACA,UAAMc,EAAE,GAAGX,IAAI,CAACH,EAAC,GAAG,CAAL,CAAf;;AAEA,UAAIc,EAAE,IAAID,EAAE,CAACrD,GAAH,KAAWsD,EAAE,CAACtD,GAAxB,EAA6B;AAC3B,YAAIwC,EAAC,KAAKQ,oBAAV,EAAgC;AAC9B,cAAMO,OAAO,GAAGD,EAAE,CAACtD,GAAH,GAASoD,SAAzB;;AACA,cAAId,QAAQ,CAACiB,OAAD,CAAR,KAAsBA,OAA1B,EAAmC;AACjC,gBAAMC,KAAK,GAAGvD,iBAAiB,CAC7B0C,IAD6B,EAE7BW,EAAE,CAAC9C,GAF0B,EAG7B8C,EAAE,CAACtD,GAAH,GAASoD,SAHoB,EAI7BxD,QAJ6B,CAA/B;AAMA,gBAAM6D,KAAK,GAAGX,KAAK,CAACH,IAAD,EAAOa,KAAP,EAAcT,IAAd,EAAoBnD,QAApB,EAA8B0C,QAA9B,CAAnB;;AAEA,gBAAImB,KAAK,KAAKd,IAAd,EAAoB;AAClB,qBAAOE,IAAP;AACD,aAFD,MAEO;AACL,qBAAOY,KAAP;AACD;AACF,WAdD,MAcO;AACL,mBAAOZ,IAAP;AACD;AACF,SAnBD,MAmBO;AACL,cAAMU,QAAO,GAAGF,EAAE,CAACrD,GAAH,GAASoD,SAAzB;;AACA,cAAId,QAAQ,CAACiB,QAAD,CAAR,KAAsBA,QAA1B,EAAmC;AACjC,gBAAMC,MAAK,GAAGvD,iBAAiB,CAC7B0C,IAD6B,EAE7BU,EAAE,CAAC7C,GAF0B,EAG7B6C,EAAE,CAACrD,GAAH,GAASoD,SAHoB,EAI7BxD,QAJ6B,CAA/B;;AAMA,gBAAM6D,MAAK,GAAGX,KAAK,CAACH,IAAD,EAAOa,MAAP,EAAcT,IAAd,EAAoBnD,QAApB,EAA8B0C,QAA9B,CAAnB;;AAEA,gBAAImB,MAAK,KAAKd,IAAd,EAAoB;AAClB,qBAAOE,IAAP;AACD,aAFD,MAEO;AACL,qBAAOY,MAAP;AACD;AACF,WAdD,MAcO;AACL,mBAAOZ,IAAP;AACD;AACF;AACF;AACF;AACF;;AAED,SAAOF,IAAP;AACD;;ACtGM,SAASe,OAAT,GAA8D;AAAA,oCAAvCC,GAAuC;AAAvCA,IAAAA,GAAuC;AAAA;;AACnE,SAAO,UAAC/B,CAAD,EAAU;AACf,WAAO+B,GAAG,CAACC,OAAJ,CAAY,UAAAC,EAAE;AAAA,aAAIA,EAAE,IAAIA,EAAE,CAACjC,CAAD,CAAZ;AAAA,KAAd,CAAP;AACD,GAFD;AAGD;;ICCYkC,IAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA,UACEC,YADF,GACiB,UAACC,KAAD,EAAwB;AAAA,wBACJ,MAAKA,KADD;AAAA,UAC7BC,SAD6B,eAC7BA,SAD6B;AAAA,UAClBC,SADkB,eAClBA,SADkB;AAGrC,gCACKF,KADL;AAEEG,QAAAA,WAAW,EAAET,OAAO,CAClBM,KAAK,IAAIA,KAAK,CAACG,WADG,EAElBF,SAFkB,CAFtB;AAMEG,QAAAA,YAAY,EAAEV,OAAO,CAACM,KAAK,IAAIA,KAAK,CAACI,YAAhB,EAA8BF,SAA9B;AANvB;AAQD,KAZH;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BAcW;AAAA,UAELH,YAFK,GAIH,IAJG,CAELA,YAFK;AAAA,yBAIH,IAJG,CAGLC,KAHK;AAAA,UAGIK,YAHJ,gBAGIA,YAHJ;AAAA,+CAGkBC,cAHlB;AAAA,UAGkBA,cAHlB,sCAGmC,EAHnC;AAAA,UAGuCC,QAHvC,gBAGuCA,QAHvC;AAMP,UAAMC,gBAAgB,GAAGD,QAAQ,CAAC;AAChC;AACAF,QAAAA,YAAY,EAAZA,YAFgC;AAGhCC,QAAAA,cAAc,EAAdA,cAHgC;AAIhCP,QAAAA,YAAY,EAAZA;AAJgC,OAAD,CAAjC;AAMA,aAAOS,gBAAgB,IAAIC,cAAK,CAACC,QAAN,CAAeC,IAAf,CAAoBH,gBAApB,CAA3B;AACD;AA3BH;;AAAA;AAAA,EAAuDI,eAAvD;;ICAaC,OAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA,UACEC,SADF,GACc,UAAClD,CAAD,EAAkC;AAC5C,UAAIA,CAAC,CAACmD,MAAF,YAAoBC,WAAxB,EAAqC;AACnCpD,QAAAA,CAAC,CAACmD,MAAF,CAASE,KAAT;AACD;AACF,KALH;;AAAA,UAOEC,cAPF,GAOmB,UAACC,EAAD,EAAanB,KAAb,EAAoC;AAAA,wBACJ,MAAKA,KADD;AAAA,UAC3CoB,YAD2C,eAC3CA,YAD2C;AAAA,UAC7BnB,SAD6B,eAC7BA,SAD6B;AAAA,UAClBC,SADkB,eAClBA,SADkB;AAGnD,gCACKF,KADL;AAEEqB,QAAAA,SAAS,EAAE3B,OAAO,CAChBM,KAAK,IAAIA,KAAK,CAACqB,SADC;AAGhB,kBAACzD,CAAD;AAAA,iBAAqCwD,YAAY,CAACxD,CAAD,EAAIuD,EAAJ,CAAjD;AAAA,SAHgB,CAFpB;AAOEhB,QAAAA,WAAW,EAAET,OAAO,CAClBM,KAAK,IAAIA,KAAK,CAACG,WADG,EAElB,MAAKW,SAFa;AAIlB,kBAAClD,CAAD;AAAA,iBAAyBqC,SAAS,CAACrC,CAAD,EAAIuD,EAAJ,CAAlC;AAAA,SAJkB,CAPtB;AAaEf,QAAAA,YAAY,EAAEV,OAAO,CACnBM,KAAK,IAAIA,KAAK,CAACI,YADI;AAGnB,kBAACxC,CAAD;AAAA,iBAAkCsC,SAAS,CAACtC,CAAD,EAAIuD,EAAJ,CAA3C;AAAA,SAHmB;AAbvB;AAmBD,KA7BH;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BA+BW;AAAA,UAELD,cAFK,GAIH,IAJG,CAELA,cAFK;AAAA,yBAIH,IAJG,CAGLlB,KAHK;AAAA,+CAGIM,cAHJ;AAAA,UAGIA,cAHJ,sCAGqB,EAHrB;AAAA,UAGyBC,QAHzB,gBAGyBA,QAHzB;AAAA,8CAGmCrE,OAHnC;AAAA,UAGmCA,OAHnC,qCAG6C,EAH7C;AAMP,UAAMsE,gBAAgB,GAAGD,QAAQ,CAAC;AAChCrE,QAAAA,OAAO,EAAPA,OADgC;AAEhCoE,QAAAA,cAAc,EAAdA,cAFgC;AAGhCY,QAAAA,cAAc,EAAdA;AAHgC,OAAD,CAAjC;AAMA,aAAOV,gBAAgB,IAAIC,cAAK,CAACC,QAAN,CAAeC,IAAf,CAAoBH,gBAApB,CAA3B;AACD;AA5CH;;AAAA;AAAA,EAAgDI,eAAhD;;ICDaU,WAAb;AAAA;AAAA;AAKE,yBAAc;AAAA;;AAAA,SAJdC,YAIc;AAAA,SAHdC,MAGc,GAHK,CAAC,CAAD,EAAI,CAAJ,CAGL;AAAA,SAFdC,KAEc,GAFI,CAAC,CAAD,EAAI,CAAJ,CAEJ;AACZ,SAAKD,MAAL,GAAc,CAAC,CAAD,EAAI,CAAJ,CAAd;AACA,SAAKC,KAAL,GAAa,CAAC,CAAD,EAAI,CAAJ,CAAb;AACA,SAAKF,YAAL,GAAoB,IAApB;AACD;;AATH;AAAA;AAAA,uCAWqBC,MAXrB,EAWuCC,KAXvC,EAWwD;AAAA;;AACpD,UAAMzE,EAAE,GAAGwE,MAAM,CAAC,CAAD,CAAjB;AACA,UAAMrE,EAAE,GAAGqE,MAAM,CAAC,CAAD,CAAjB;AAEA,UAAME,EAAE,GAAGD,KAAK,CAAC,CAAD,CAAhB;AACA,UAAME,EAAE,GAAGF,KAAK,CAAC,CAAD,CAAhB;;AAEA,UAAItE,EAAE,GAAGH,EAAT,EAAa;AACX,eAAO,UAACqB,CAAD;AAAA,iBACL,KAAI,CAACuD,gBAAL,CAAsBD,EAAtB,EAA0BD,EAA1B,EAA8B,KAAI,CAACG,kBAAL,CAAwB1E,EAAxB,EAA4BH,EAA5B,EAAgCqB,CAAhC,CAA9B,CADK;AAAA,SAAP;AAED,OAHD,MAGO;AACL,eAAO,UAACA,CAAD;AAAA,iBACL,KAAI,CAACuD,gBAAL,CAAsBF,EAAtB,EAA0BC,EAA1B,EAA8B,KAAI,CAACE,kBAAL,CAAwB7E,EAAxB,EAA4BG,EAA5B,EAAgCkB,CAAhC,CAA9B,CADK;AAAA,SAAP;AAED;AACF;AAzBH;AAAA;AAAA,qCA2BmBvC,CA3BnB,EA2B8BC,CA3B9B,EA2ByC;AACrC,aACGD,CAAC,GAAG,CAACA,CAAN,EACCC,CAAC,IAAID,CADN,EAEA,SAAS0C,CAAT,CAAWsD,CAAX,EAAsB;AACpB,eAAOhG,CAAC,GAAGC,CAAC,GAAG+F,CAAf;AACD,OALH;AAOD;AAnCH;AAAA;AAAA,uCAqCqBhG,CArCrB,EAqCgCC,CArChC,EAqC2C;AACvC,aAAO,CAACA,CAAC,IAAID,CAAC,GAAG,CAACA,CAAX,IAAgB,UAACuC,CAAD;AAAA,eAAe,CAACA,CAAC,GAAGvC,CAAL,IAAUC,CAAzB;AAAA,OAAhB,GAA6C;AAAA,eAAMA,CAAN;AAAA,OAApD;AACD;AAvCH;AAAA;AAAA,8BAyCY;AACR,WAAKwF,YAAL,GAAoB,IAApB;AAEA,aAAO,IAAP;AACD;AA7CH;AAAA;AAAA,6BA+CWlD,CA/CX,EA+CsB;AAAA,UACVmD,MADU,GACQ,IADR,CACVA,MADU;AAAA,UACFC,KADE,GACQ,IADR,CACFA,KADE;AAGlB,aAAO,CACL,KAAKF,YAAL,KACC,KAAKA,YAAL,GAAoB,KAAKQ,kBAAL,CAAwBP,MAAxB,EAAgCC,KAAhC,CADrB,CADK,EAGL,CAACpD,CAHI,CAAP;AAID;AAtDH;AAAA;AAAA,8BAwDYrC,GAxDZ,EAwD2B;AACvB,WAAKwF,MAAL,GAAc,CAACxF,GAAG,CAAC,CAAD,CAAJ,EAASA,GAAG,CAAC,CAAD,CAAZ,CAAd;AAEA,WAAKgG,OAAL;AAEA,aAAO,IAAP;AACD;AA9DH;AAAA;AAAA,gCAgEc;AACV,aAAO,KAAKR,MAAZ;AACD;AAlEH;AAAA;AAAA,6BAoEWxF,GApEX,EAoE0B;AACtB,WAAKyF,KAAL,GAAa,CAACzF,GAAG,CAAC,CAAD,CAAJ,EAASA,GAAG,CAAC,CAAD,CAAZ,CAAb;AAEA,aAAO,IAAP;AACD;AAxEH;AAAA;AAAA,6BA0EWiG,KA1EX,EA0E0B;AACtB,UAAMC,CAAC,GAAG,KAAKV,MAAf;AACA,aAAOW,aAAK,CAACD,CAAC,CAAC,CAAD,CAAF,EAAOA,CAAC,CAACA,CAAC,CAACzE,MAAF,GAAW,CAAZ,CAAR,EAAwBwE,KAAK,GAAGA,KAAH,GAAW,EAAxC,CAAZ;AACD;AA7EH;;AAAA;AAAA;;ACCA,IAAMG,mBAAmB,GAAG,SAAtBA,mBAAsB;AAAA,SAAO;AAAEC,IAAAA,KAAK,EAAE,CAAT;AAAYC,IAAAA,OAAO,EAAE;AAArB,GAAP;AAAA,CAA5B;;AAEA,IAAaC,KAA2B,GAAG9B,cAAK,CAAC+B,IAAN,CACzC,gBAOM;AAAA,MANJjC,QAMI,QANJA,QAMI;AAAA,MALJvC,MAKI,QALJA,MAKI;AAAA,wBAJJyE,KAII;AAAA,MAJJA,KAII,2BAJI,IAAInB,WAAJ,EAIJ;AAAA,wBAHJW,KAGI;AAAA,MAHJA,KAGI,2BAHI,EAGJ;AAAA,+BAFJ5B,YAEI;AAAA,MAFJA,YAEI,kCAFW+B,mBAEX;AAAA,iCADJ9B,cACI;AAAA,MADJA,cACI,oCADa,EACb;AACJ,MAAM6B,KAAK,GAAG,CAACnE,MAAM,GAAGA,MAAH,GAAYyE,KAAK,CAACC,QAAN,CAAeT,KAAf,CAAnB,EAA0C7D,GAA1C,CAA8C,UAAAiE,KAAK;AAAA,WAAK;AACpElB,MAAAA,EAAE,eAAQkB,KAAR,CADkE;AAEpEA,MAAAA,KAAK,EAALA,KAFoE;AAGpEC,MAAAA,OAAO,EAAEG,KAAK,CAACnE,QAAN,CAAe+D,KAAf;AAH2D,KAAL;AAAA,GAAnD,CAAd;AAMA,SAAO9B,QAAQ,CAAC;AAAEF,IAAAA,YAAY,EAAZA,YAAF;AAAgBC,IAAAA,cAAc,EAAdA,cAAhB;AAAgC6B,IAAAA,KAAK,EAALA;AAAhC,GAAD,CAAf;AACD,CAhBwC,CAApC;;ACAP,IAAMC,qBAAmB,GAAG,SAAtBA,mBAAsB;AAAA,SAAO;AAAEC,IAAAA,KAAK,EAAE,CAAT;AAAYC,IAAAA,OAAO,EAAE;AAArB,GAAP;AAAA,CAA5B;;AAEA,IAAaK,MAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;;AAAA,UACEC,aADF,GACkB,UAAC5C,KAAD,EAAwB;AAAA,wBACL,MAAKA,KADA;AAAA,UAC9BC,SAD8B,eAC9BA,SAD8B;AAAA,UACnBC,SADmB,eACnBA,SADmB;AAGtC,gCACMF,KAAK,IAAI,EADf;AAEEG,QAAAA,WAAW,EAAET,OAAO,CAClBM,KAAK,IAAIA,KAAK,CAACG,WADG,EAElBF,SAFkB,CAFtB;AAMEG,QAAAA,YAAY,EAAEV,OAAO,CACnBM,KAAK,IAAIA,KAAK,CAACI,YADI,EAEnBF,SAFmB;AANvB;AAWD,KAfH;;AAAA;AAAA;;AAAA;AAAA;AAAA,6BAiBW;AAAA,UAEL0C,aAFK,GAYH,IAZG,CAELA,aAFK;AAAA,yBAYH,IAZG,CAGL5C,KAHK;AAAA,UAIHO,QAJG,gBAIHA,QAJG;AAAA,2CAKHrD,IALG;AAAA,UAKHA,IALG,kCAKI,IALJ;AAAA,4CAMHG,KANG;AAAA,UAMHA,KANG,mCAMK,IANL;AAAA,4CAOHoF,KAPG;AAAA,UAOHA,KAPG,mCAOK,IAAInB,WAAJ,EAPL;AAAA,8CAQHpF,OARG;AAAA,UAQHA,OARG,qCAQO,EARP;AAAA,+CASHmE,YATG;AAAA,UASHA,YATG,sCASY+B,qBATZ;AAAA,+CAUH9B,cAVG;AAAA,UAUHA,cAVG,sCAUc,EAVd;AAcP,UAAMkB,MAAM,GAAGiB,KAAK,CAACI,SAAN,EAAf;AACA,UAAMC,MAAM,GAAG,EAAf;;AAEA,WAAK,IAAItE,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGtC,OAAO,CAACuB,MAAR,GAAiB,CAArC,EAAwCe,CAAC,EAAzC,EAA6C;AAC3C,YAAIuE,MAAM,GAAG7G,OAAO,CAACsC,CAAC,GAAG,CAAL,CAApB;AACA,YAAIuC,MAAM,GAAG7E,OAAO,CAACsC,CAAD,CAApB;;AAEA,YAAIA,CAAC,KAAK,CAAN,IAAWtB,IAAI,KAAK,IAAxB,EAA8B;AAC5B6F,UAAAA,MAAM,GAAG;AAAE5B,YAAAA,EAAE,EAAE,GAAN;AAAWkB,YAAAA,KAAK,EAAEb,MAAM,CAAC,CAAD,CAAxB;AAA6Bc,YAAAA,OAAO,EAAE;AAAtC,WAAT;AACD,SAFD,MAEO,IAAI9D,CAAC,KAAKtC,OAAO,CAACuB,MAAd,IAAwBJ,KAAK,KAAK,IAAtC,EAA4C;AACjD0D,UAAAA,MAAM,GAAG;AAAEI,YAAAA,EAAE,EAAE,GAAN;AAAWkB,YAAAA,KAAK,EAAEb,MAAM,CAAC,CAAD,CAAxB;AAA6Bc,YAAAA,OAAO,EAAE;AAAtC,WAAT;AACD;;AAED,YAAIS,MAAM,IAAIhC,MAAd,EAAsB;AACpB+B,UAAAA,MAAM,CAACE,IAAP,CAAY;AACV7B,YAAAA,EAAE,YAAK4B,MAAM,CAAC5B,EAAZ,cAAkBJ,MAAM,CAACI,EAAzB,CADQ;AAEV4B,YAAAA,MAAM,EAANA,MAFU;AAGVhC,YAAAA,MAAM,EAANA;AAHU,WAAZ;AAKD;AACF;;AAED,UAAMP,gBAAgB,GAAGD,QAAQ,CAAC;AAChCF,QAAAA,YAAY,EAAZA,YADgC;AAEhCC,QAAAA,cAAc,EAAdA,cAFgC;AAGhCwC,QAAAA,MAAM,EAANA,MAHgC;AAIhCF,QAAAA,aAAa,EAAbA;AAJgC,OAAD,CAAjC;AAOA,aAAOpC,gBAAgB,IAAIC,cAAK,CAACC,QAAN,CAAeC,IAAf,CAAoBH,gBAApB,CAA3B;AACD;AA7DH;;AAAA;AAAA,EAA4BI,eAA5B;;ACTA,SAASqC,KAAT,CAAeZ,KAAf,EAA8Ba,GAA9B,EAA2CC,GAA3C,EAAwD;AACtD,SAAOC,IAAI,CAACF,GAAL,CAASE,IAAI,CAACD,GAAL,CAASd,KAAT,EAAgBa,GAAhB,CAAT,EAA+BC,GAA/B,CAAP;AACD;;AAED,IAAaE,aAAb;AAAA;;AAAA;;AAAA,OACEtE,IADF,GACiB,CADjB;AAAA,OAEEyC,MAFF,GAEqB,CAAC,CAAD,EAAI,CAAJ,CAFrB;AAAA,OAGEC,KAHF,GAGoB,CAAC,CAAD,EAAI,CAAJ,CAHpB;;AAAA,OAKE6B,SALF,GAKc,UAACtH,GAAD,EAAmB;AAC7B,IAAA,KAAI,CAACwF,MAAL,GAAc,CAACxF,GAAG,CAAC,CAAD,CAAJ,EAASA,GAAG,CAAC,CAAD,CAAZ,CAAd;AAEA,WAAO,KAAP;AACD,GATH;;AAAA,OAWEuH,QAXF,GAWa,UAACvH,GAAD,EAAmB;AAC5B,IAAA,KAAI,CAACyF,KAAL,GAAa,CAACzF,GAAG,CAAC,CAAD,CAAJ,EAASA,GAAG,CAAC,CAAD,CAAZ,CAAb;AAEA,WAAO,KAAP;AACD,GAfH;;AAAA,OAiBEwH,OAjBF,GAiBY,UAACxH,GAAD,EAAiB;AACzB,IAAA,KAAI,CAAC+C,IAAL,GAAY/C,GAAZ;AAEA,WAAO,KAAP;AACD,GArBH;;AAAA,OAuBEsC,QAvBF,GAuBa,UAACD,CAAD,EAAe;AAAA,sCAKpB,KALoB,CAEtBmD,MAFsB;AAAA,QAEbxE,EAFa;AAAA,QAETG,EAFS;AAAA,qCAKpB,KALoB,CAGtBsE,KAHsB;AAAA,QAGdC,EAHc;AAAA,QAGVC,EAHU;AAAA,QAItB5C,IAJsB,GAKpB,KALoB,CAItBA,IAJsB;;AAOxB,QAAM0E,CAAC,GAAG,CAACR,KAAK,CAAC5E,CAAD,EAAIrB,EAAJ,EAAQG,EAAR,CAAL,GAAmBH,EAApB,KAA2BG,EAAE,GAAGH,EAAhC,CAAV;AACA,QAAMjB,CAAC,GAAGgD,IAAI,GAAGqE,IAAI,CAACM,KAAL,CAAYD,CAAC,IAAI9B,EAAE,GAAGD,EAAT,CAAF,GAAkB3C,IAA7B,CAAP,GAA4C2C,EAAtD;AAEA,WAAOuB,KAAK,CAAClH,CAAD,EAAI2F,EAAE,GAAGC,EAAL,GAAUD,EAAV,GAAeC,EAAnB,EAAuBA,EAAE,GAAGD,EAAL,GAAUC,EAAV,GAAeD,EAAtC,CAAZ;AACD,GAlCH;AAAA;;ACiBA,IAAMiC,SAAS,GACb,OAAOC,MAAP,KAAkB,WAAlB,IAAiC,OAAOC,QAAP,KAAoB,WADvD;;AAGA,IAAMC,IAAI,GAAG,SAAPA,IAAO,GAAM,EAAnB;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAAChI,CAAD;AAAA,SAAc,UAACiI,CAAD,EAAS9B,CAAT,EAAiB1D,CAAjB;AAAA,WAA+BwF,CAAC,IAAIjI,CAAC,CAACyC,CAAD,CAAD,KAAS0D,CAA7C;AAAA,GAAd;AAAA,CAAhB;;AAEA,IAAM+B,KAAK,GAAG,SAARA,KAAQ,CAACnI,CAAD,EAASC,CAAT,EAAoB;AAChC,SAAOD,CAAC,KAAKC,CAAN,IAAYD,CAAC,CAAC2B,MAAF,KAAa1B,CAAC,CAAC0B,MAAf,IAAyB3B,CAAC,CAACoI,MAAF,CAASH,OAAO,CAAChI,CAAD,CAAhB,EAAqB,IAArB,CAA5C;AACD,CAFD;;AAUA,IAAMoI,cAAc,GAAG,SAAjBA,cAAiB,CAACC,IAAD,EAAiD;AACtE,MAAM7G,IAAI,GAAI6G,IAAD,CAAuB7G,IAApC;AACA,MAAM8G,IAAI,GAAG9G,IAAI,GAAGA,IAAI,CAAC8G,IAAR,GAAe,EAAhC;AAEA,SACEA,IAAI,KAAKxD,OAAO,CAACwD,IAAjB,IACAA,IAAI,KAAKvE,IAAI,CAACuE,IADd,IAEAA,IAAI,KAAK9B,KAAK,CAAC8B,IAFf,IAGAA,IAAI,KAAK1B,MAAM,CAAC0B,IAJlB;AAMD,CAVD;;AAYA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CACnBzF,IADmB,EAEnBE,IAFmB,EAGnByC,MAHmB,EAInB5F,QAJmB,EAKhB;AACH,MAAM2I,MAAM,GAAG3I,QAAQ,GAAGiD,IAAI,GAAGE,IAAV,GAAiBF,IAAI,GAAGE,IAA/C;AACA,SAAOnD,QAAQ,GAAGwH,IAAI,CAACD,GAAL,CAAS3B,MAAM,CAAC,CAAD,CAAf,EAAoB+C,MAApB,CAAH,GAAiCnB,IAAI,CAACF,GAAL,CAAS1B,MAAM,CAAC,CAAD,CAAf,EAAoB+C,MAApB,CAAhD;AACD,CARD;;AAUA,IAAMC,YAAY,GAAG,SAAfA,YAAe,CACnB3F,IADmB,EAEnBE,IAFmB,EAGnByC,MAHmB,EAInB5F,QAJmB,EAKhB;AACH,MAAM2I,MAAM,GAAG3I,QAAQ,GAAGiD,IAAI,GAAGE,IAAV,GAAiBF,IAAI,GAAGE,IAA/C;AACA,SAAOnD,QAAQ,GAAGwH,IAAI,CAACF,GAAL,CAAS1B,MAAM,CAAC,CAAD,CAAf,EAAoB+C,MAApB,CAAH,GAAiCnB,IAAI,CAACD,GAAL,CAAS3B,MAAM,CAAC,CAAD,CAAf,EAAoB+C,MAApB,CAAhD;AACD,CARD;;AAUA,IAAaE,MAAb;AAAA;AAAA;AAAA;;AAAA;AAAA;;AAAA;;AAAA;;AAAA;AAAA;AAAA;;AAAA;AAAA,UAGEC,KAHF,GAGU;AACN3F,MAAAA,IAAI,EAAE,GADA;AAENf,MAAAA,MAAM,EAAE,EAFF;AAGNwD,MAAAA,MAAM,EAAE,CAAC,CAAD,EAAI,GAAJ,CAHF;AAINtF,MAAAA,OAAO,EAAE,EAJH;AAKNN,MAAAA,QAAQ,EAAE,KALJ;AAMN0E,MAAAA,cAAc,EAAE,EANV;AAONqE,MAAAA,WAAW,EAAE,IAPP;AAQN1G,MAAAA,WAAW,EAAE,IARP;AASN2G,MAAAA,WAAW,EAAE,IATP;AAUNf,MAAAA,QAAQ,EAAEA;AAVJ,KAHV;AAAA,UAgBEjH,MAhBF,GAgBW6D,cAAK,CAACoE,SAAN,EAhBX;;AAAA,UA4IExD,SA5IF,GA4Ic,UAACzD,CAAD,EAAmBkH,QAAnB,EAAwC;AAClD,UAAIC,WAAW,GAAG,CAAC,YAAD,EAAe,SAAf,CAAlB;AACA,UAAIC,aAAa,GAAG,CAAC,WAAD,EAAc,WAAd,CAApB;;AAFkD;AAAA,UAKvC9I,OALuC,yBAKhDwI,KALgD,CAKvCxI,OALuC;AAAA,yDAMhD8D,KANgD;AAAA,0DAO9CjB,IAP8C;AAAA,UAO9CA,IAP8C,uCAOvC,GAPuC;AAAA,0DAQ9CnD,QAR8C;AAAA,UAQ9CA,QAR8C,uCAQnC,KARmC;AAAA,0DAS9CiB,QAT8C;AAAA,UAS9CA,QAT8C,uCASnC,KATmC;AAAA,0DAU9C2E,MAV8C;AAAA,UAU9CA,MAV8C,uCAUrC,CAAC,CAAD,EAAI,GAAJ,CAVqC;;AAalD,UAAMhF,GAAG,GAAGoB,CAAC,CAACpB,GAAF,cAAYoB,CAAC,CAACqH,OAAd,CAAZ;;AAEA,UAAI,CAACF,WAAW,CAACG,MAAZ,CAAmBF,aAAnB,EAAkCG,QAAlC,CAA2C3I,GAA3C,CAAL,EAAsD;AACpD;AACD;;AAED,UAAIK,QAAJ,EAAc;AAAA,mBACmB,CAACmI,aAAD,EAAgBD,WAAhB,CADnB;AACXA,QAAAA,WADW;AACEC,QAAAA,aADF;AAEb;;AAEDpH,MAAAA,CAAC,CAACwH,eAAF,IAAqBxH,CAAC,CAACwH,eAAF,EAArB;AACAxH,MAAAA,CAAC,CAACyH,cAAF,IAAoBzH,CAAC,CAACyH,cAAF,EAApB;AAEA,UAAMC,KAAK,GAAGpJ,OAAO,CAACqJ,IAAR,CAAa,UAAAlD,KAAK,EAAI;AAClC,eAAOA,KAAK,CAAC7F,GAAN,KAAcsI,QAArB;AACD,OAFa,CAAd;;AAIA,UAAI,CAACQ,KAAL,EAAY;AACV;AACD;;AAED,UAAME,OAAO,GAAGF,KAAK,CAACtJ,GAAtB;AACA,UAAIuI,MAAM,GAAGiB,OAAb;;AAEA,UAAIT,WAAW,CAACI,QAAZ,CAAqB3I,GAArB,CAAJ,EAA+B;AAC7B+H,QAAAA,MAAM,GAAGD,YAAY,CAACkB,OAAD,EAAUzG,IAAV,EAAgByC,MAAhB,EAAwB5F,QAAxB,CAArB;AACD,OAFD,MAEO,IAAIoJ,aAAa,CAACG,QAAd,CAAuB3I,GAAvB,CAAJ,EAAiC;AACtC+H,QAAAA,MAAM,GAAGC,YAAY,CAACgB,OAAD,EAAUzG,IAAV,EAAgByC,MAAhB,EAAwB5F,QAAxB,CAArB;AACD;;AACD,UAAM6J,WAAW,GAAGvJ,OAAO,CAACkC,GAAR,CAAY,UAAA7B,CAAC;AAAA,eAC/BA,CAAC,CAACC,GAAF,KAAUsI,QAAV,GAAqB;AAAEtI,UAAAA,GAAG,EAAED,CAAC,CAACC,GAAT;AAAcR,UAAAA,GAAG,EAAEuI;AAAnB,SAArB,GAAmDhI,CADpB;AAAA,OAAb,CAApB;;AAIA,YAAKmJ,YAAL,CAAkBD,WAAlB,EAA+B,IAA/B;AACD,KA3LH;;AAAA,UA6LEtF,WA7LF,GA6LgB,UAACvC,CAAD,EAAgBkH,QAAhB,EAAqC;AACjD,YAAKa,OAAL,CAAa/H,CAAb,EAAgBkH,QAAhB,EAA0B,KAA1B;AACD,KA/LH;;AAAA,UAiME1E,YAjMF,GAiMiB,UAACxC,CAAD,EAAgBkH,QAAhB,EAAqC;AAClD,UAAIxH,eAAe,CAACM,CAAD,CAAnB,EAAwB;AACtB;AACD;;AAED,YAAK+H,OAAL,CAAa/H,CAAb,EAAgBkH,QAAhB,EAA0B,IAA1B;AACD,KAvMH;;AAAA,UAyREzE,YAzRF,GAyRiB,UAACzC,CAAD,EAAyCgI,OAAzC,EAA8D;AAAA;AAAA,0DAEzElB,KAFyE;AAAA,UAEhEE,WAFgE,0BAEhEA,WAFgE;AAAA,UAEnDD,WAFmD,0BAEnDA,WAFmD;AAAA,UAGhE9H,QAHgE,0BAGzEmD,KAHyE,CAGhEnD,QAHgE;AAO3E;;;AACA+H,MAAAA,WAAW,CAACtB,SAAZ,CAAsB3G,eAAe,CAAC,MAAKC,MAAL,CAAYiJ,OAAb,EAAsBhJ,QAAtB,CAArC;AAEA,UAAIwF,KAAJ;;AAEA,UAAIuD,OAAO,IAAIhI,CAAC,YAAYkI,UAA5B,EAAwC;AACtC;AACAzD,QAAAA,KAAK,GAAGuC,WAAW,CAACtG,QAAZ,CAAqBX,gBAAgB,CAACd,QAAD,EAAWe,CAAX,CAArC,CAAR;AACD,OAHD,MAGO,IAAIA,CAAC,YAAYmI,UAAjB,EAA6B;AAClC;AACA1D,QAAAA,KAAK,GAAGuC,WAAW,CAACtG,QAAZ,CAAqBzB,QAAQ,GAAGe,CAAC,CAACC,OAAL,GAAeD,CAAC,CAACE,KAA9C,CAAR;AACD;;AACD,aAAO;AACLuE,QAAAA,KAAK,EAALA,KADK;AAEL;AACAC,QAAAA,OAAO,EAAEqC,WAAW,CAACrG,QAAZ,CAAqB+D,KAArB;AAHJ,OAAP;AAKD,KAjTH;;AAAA,UAmUE2D,WAnUF,GAmUgB,UAACpI,CAAD,EAAmB;AAAA;AAAA,2DAE7B8G,KAF6B;AAAA,UAEX7F,IAFW,2BAEpB3C,OAFoB;AAAA,UAEL0I,WAFK,2BAELA,WAFK;AAAA,4DAEQtE,cAFR;AAAA,UAEQA,cAFR,wCAEyB,EAFzB;AAAA,2DAG7BN,KAH6B;AAAA,UAGpBnD,QAHoB,2BAGpBA,QAHoB;AAAA,4DAGVjB,QAHU;AAAA,UAGVA,QAHU,wCAGC,KAHD;AAM/B;;;AACAgJ,MAAAA,WAAW,CAACtB,SAAZ,CAAsB3G,eAAe,CAAC,MAAKC,MAAL,CAAYiJ,OAAb,EAAsBhJ,QAAtB,CAArC,EAP+B;AAU/B;;AACA,UAAMT,WAAW,GAAGwI,WAAW,CAACtG,QAAZ,CAAqBzB,QAAQ,GAAGe,CAAC,CAACC,OAAL,GAAeD,CAAC,CAACE,KAA9C,CAApB,CAX+B;;AAc/B,UAAM2H,WAAW,GAAGxJ,iBAAiB,CACnC4C,IADmC,EAEnCyB,cAFmC,EAGnClE,WAHmC,EAInCR,QAJmC,CAArC,CAd+B;;AAsB/B,YAAK8J,YAAL,CAAkBD,WAAlB;AACD,KA1VH;;AAAA,UA4VEQ,WA5VF,GA4VgB,UAACrI,CAAD,EAAmB;AAAA;AAAA,4DAE7B8G,KAF6B;AAAA,UAEX7F,IAFW,2BAEpB3C,OAFoB;AAAA,UAEL0I,WAFK,2BAELA,WAFK;AAAA,UAEQtE,cAFR,2BAEQA,cAFR;AAAA,4DAG7BN,KAH6B;AAAA,UAGpBnD,QAHoB,2BAGpBA,QAHoB;AAAA,UAGVjB,QAHU,2BAGVA,QAHU;;AAK/B,UAAIgJ,WAAW,KAAK,IAAhB,IAAwBtH,eAAe,CAACM,CAAD,CAA3C,EAAgD;AAC9C;AACD,OAP8B;AAU/B;;;AACAgH,MAAAA,WAAW,CAACtB,SAAZ,CAAsB3G,eAAe,CAAC,MAAKC,MAAL,CAAYiJ,OAAb,EAAsBhJ,QAAtB,CAArC,EAX+B;AAc/B;;AACA,UAAMT,WAAW,GAAGwI,WAAW,CAACtG,QAAZ,CAAqBX,gBAAgB,CAACd,QAAD,EAAWe,CAAX,CAArC,CAApB,CAf+B;;AAkB/B,UAAM6H,WAAW,GAAGxJ,iBAAiB,CACnC4C,IADmC,EAEnCyB,cAFmC,EAGnClE,WAHmC,EAInCR,QAJmC,CAArC,CAlB+B;;AA0B/B,YAAK8J,YAAL,CAAkBD,WAAlB;AACD,KAvXH;;AAAA,UAyaES,SAzaF,GAyac,YAAM;AAAA;AAAA,4DAEdxB,KAFc;AAAA,4DAELxI,OAFK;AAAA,UAELA,OAFK,wCAEK,EAFL;AAAA,UAESoE,cAFT,2BAESA,cAFT;AAAA,4DAGdN,KAHc;AAAA,4DAGLmG,QAHK;AAAA,UAGLA,QAHK,wCAGMrC,IAHN;AAAA,4DAGYsC,UAHZ;AAAA,UAGYA,UAHZ,wCAGyBtC,IAHzB;;AAMhBqC,MAAAA,QAAQ,CAACjK,OAAO,CAACkC,GAAR,CAAY,UAAA8D,CAAC;AAAA,eAAIA,CAAC,CAAClG,GAAN;AAAA,OAAb,CAAD,CAAR;AACAoK,MAAAA,UAAU,CACRlK,OAAO,CAACkC,GAAR,CAAY,UAAA8D,CAAC;AAAA,eAAIA,CAAC,CAAClG,GAAN;AAAA,OAAb,CADQ,EAER;AAAEsE,QAAAA,cAAc,EAAdA;AAAF,OAFQ,CAAV;;AAKA,YAAK+F,QAAL,CAAc;AAAE/F,QAAAA,cAAc,EAAE;AAAlB,OAAd;;AAEA,UAAIqD,SAAJ,EAAe;AACb,YAAM2C,GAAG,GAAG,MAAKtG,KAAL,CAAW6D,QAAX,IAAuBA,QAAnC;AACAyC,QAAAA,GAAG,CAACC,mBAAJ,CAAwB,WAAxB,EAAqC,MAAKP,WAA1C;AACAM,QAAAA,GAAG,CAACC,mBAAJ,CAAwB,SAAxB,EAAmC,MAAKL,SAAxC;AACD;AACF,KA5bH;;AAAA,UA8bEM,UA9bF,GA8be,YAAM;AAAA;AAAA,4DAEf9B,KAFe;AAAA,UAENxI,OAFM,2BAENA,OAFM;AAAA,UAEGoE,cAFH,2BAEGA,cAFH;AAAA,4DAGfN,KAHe;AAAA,4DAGNmG,QAHM;AAAA,UAGNA,QAHM,wCAGKrC,IAHL;AAAA,4DAGWsC,UAHX;AAAA,UAGWA,UAHX,wCAGwBtC,IAHxB;;AAMjBqC,MAAAA,QAAQ,CAACjK,OAAO,CAACkC,GAAR,CAAY,UAAA8D,CAAC;AAAA,eAAIA,CAAC,CAAClG,GAAN;AAAA,OAAb,CAAD,CAAR;AACAoK,MAAAA,UAAU,CACRlK,OAAO,CAACkC,GAAR,CAAY,UAAA8D,CAAC;AAAA,eAAIA,CAAC,CAAClG,GAAN;AAAA,OAAb,CADQ,EAER;AAAEsE,QAAAA,cAAc,EAAdA;AAAF,OAFQ,CAAV;;AAKA,YAAK+F,QAAL,CAAc;AAAE/F,QAAAA,cAAc,EAAE;AAAlB,OAAd;;AAEA,UAAIqD,SAAJ,EAAe;AACb,YAAM2C,GAAG,GAAG,MAAKtG,KAAL,CAAW6D,QAAX,IAAuBA,QAAnC;AACAyC,QAAAA,GAAG,CAACC,mBAAJ,CAAwB,WAAxB,EAAqC,MAAKN,WAA1C;AACAK,QAAAA,GAAG,CAACC,mBAAJ,CAAwB,UAAxB,EAAoC,MAAKC,UAAzC;AACD;AACF,KAjdH;;AAAA;AAAA;;AAAA;AAAA;AAAA,wCAsHsB;AAAA,UACV5B,WADU,GACM,KAAKF,KADX,CACVE,WADU;AAAA,UAEV/H,QAFU,GAEG,KAAKmD,KAFR,CAEVnD,QAFU;;AAKlB+H,MAAAA,WAAW,CAACtB,SAAZ,CAAsB3G,eAAe,CAAC,KAAKC,MAAL,CAAYiJ,OAAb,EAAsBhJ,QAAtB,CAArC;AACD;AA5HH;AAAA;AAAA,2CA8HyB;AACrB,WAAK4J,eAAL;AACD;AAhIH;AAAA;AAAA,sCAkIoB;AAChB,UAAMH,GAAG,GAAG,KAAKtG,KAAL,CAAW6D,QAAX,IAAuBA,QAAnC;;AACA,UAAIF,SAAJ,EAAe;AACb2C,QAAAA,GAAG,CAACC,mBAAJ,CAAwB,WAAxB,EAAqC,KAAKP,WAA1C;AACAM,QAAAA,GAAG,CAACC,mBAAJ,CAAwB,SAAxB,EAAmC,KAAKL,SAAxC;AACAI,QAAAA,GAAG,CAACC,mBAAJ,CAAwB,WAAxB,EAAqC,KAAKN,WAA1C;AACAK,QAAAA,GAAG,CAACC,mBAAJ,CAAwB,UAAxB,EAAoC,KAAKC,UAAzC;AACD;AACF;AA1IH;AAAA;AAAA,4BAyMU5I,CAzMV,EAyMsCkH,QAzMtC,EAyMwDc,OAzMxD,EAyM0E;AAAA,UAE3D1J,OAF2D,GAIlE,IAJkE,CAEpEwI,KAFoE,CAE3DxI,OAF2D;AAAA,kCAIlE,IAJkE,CAGpE8D,KAHoE,CAG3D0G,YAH2D;AAAA,UAG3DA,YAH2D,sCAG5C5C,IAH4C;;AAMtE,UAAI,CAAC8B,OAAL,EAAc;AACZhI,QAAAA,CAAC,CAACyH,cAAF,IAAoBzH,CAAC,CAACyH,cAAF,EAApB;AACD;;AAEDzH,MAAAA,CAAC,CAACwH,eAAF,IAAqBxH,CAAC,CAACwH,eAAF,EAArB;AAEA,UAAME,KAAK,GAAGpJ,OAAO,CAACqJ,IAAR,CAAa,UAAAlD,KAAK,EAAI;AAClC,eAAOA,KAAK,CAAC7F,GAAN,KAAcsI,QAArB;AACD,OAFa,CAAd;;AAIA,UAAIQ,KAAJ,EAAW;AACT,aAAKe,QAAL,CAAc;AAAE/F,UAAAA,cAAc,EAAEwE;AAAlB,SAAd;AACA4B,QAAAA,YAAY,CACVxK,OAAO,CAACkC,GAAR,CAAY,UAAA8D,CAAC;AAAA,iBAAIA,CAAC,CAAClG,GAAN;AAAA,SAAb,CADU,EAEV;AAAEsE,UAAAA,cAAc,EAAEwE;AAAlB,SAFU,CAAZ;AAIAc,QAAAA,OAAO,GAAG,KAAKe,cAAL,EAAH,GAA2B,KAAKC,cAAL,EAAlC;AACD,OAPD,MAOO;AACL,aAAKP,QAAL,CAAc;AAAE/F,UAAAA,cAAc,EAAE;AAAlB,SAAd;AACA,aAAKuG,wBAAL,CAA8BjJ,CAA9B,EAAiCgI,OAAjC;AACD;AACF;AApOH;AAAA;AAAA,6CAsO2BhI,CAtO3B,EAsOuDgI,OAtOvD,EAsOyE;AAAA;;AAAA,wBAIjE,IAJiE,CAEnElB,KAFmE;AAAA,UAEjD7F,IAFiD,eAE1D3C,OAF0D;AAAA,UAE3C0I,WAF2C,eAE3CA,WAF2C;AAAA,wBAIjE,IAJiE,CAGnE5E,KAHmE;AAAA,UAG1DnD,QAH0D,eAG1DA,QAH0D;AAAA,6CAGhDjB,QAHgD;AAAA,UAGhDA,QAHgD,qCAGrC,KAHqC;AAAA,UAK7DgB,MAL6D,GAKlD,IALkD,CAK7DA,MAL6D;AAQrE;;AACAgI,MAAAA,WAAW,CAACtB,SAAZ,CAAsB3G,eAAe,CAACC,MAAM,CAACiJ,OAAR,EAAiBhJ,QAAjB,CAArC,EATqE;;AAYrE,UAAIT,WAAJ;;AAEA,UAAIwJ,OAAJ,EAAa;AACX;AACAxJ,QAAAA,WAAW,GAAGwI,WAAW,CAACtG,QAAZ,CAAqBX,gBAAgB,CAACd,QAAD,EAAWe,CAAX,CAArC,CAAd;AACD,OAHD,MAGO;AACL;AACAxB,QAAAA,WAAW,GAAGwI,WAAW,CAACtG,QAAZ,CAAqBzB,QAAQ,GAAGe,CAAC,CAACC,OAAL,GAAeD,CAAC,CAACE,KAA9C,CAAd;AACD,OApBoE;;;AAuBrE,UAAI3B,SAAS,GAAG,EAAhB;AACA,UAAI2K,OAAO,GAAGC,QAAd;;AAEA,WAAK,IAAIvI,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGK,IAAI,CAACpB,MAAzB,EAAiCe,CAAC,EAAlC,EAAsC;AAAA,sBACfK,IAAI,CAACL,CAAD,CADW;AAAA,YAC5BhC,GAD4B,WAC5BA,GAD4B;AAAA,YACvBR,GADuB,WACvBA,GADuB;AAEpC,YAAMgL,IAAI,GAAG5D,IAAI,CAAC6D,GAAL,CAASjL,GAAG,GAAGI,WAAf,CAAb;;AAEA,YAAI4K,IAAI,GAAGF,OAAX,EAAoB;AAClB3K,UAAAA,SAAS,GAAGK,GAAZ;AACAsK,UAAAA,OAAO,GAAGE,IAAV;AACD;AACF,OAlCoE;;;AAqCrE,UAAMvB,WAAW,GAAGxJ,iBAAiB,CACnC4C,IADmC,EAEnC1C,SAFmC,EAGnCC,WAHmC,EAInCR,QAJmC,CAArC,CArCqE;;AA6CrE,WAAKyK,QAAL,CAAc;AAAE/F,QAAAA,cAAc,EAAEnE;AAAlB,OAAd,EAA6C,YAAM;AACjD,QAAA,MAAI,CAACuJ,YAAL,CAAkBD,WAAlB,EAA+B,IAA/B;;AACAG,QAAAA,OAAO,GAAG,MAAI,CAACe,cAAL,EAAH,GAA2B,MAAI,CAACC,cAAL,EAAlC;AACD,OAHD;AAID;AAvRH;AAAA;AAAA,qCAmTmB;AACf,UAAIjD,SAAJ,EAAe;AACb,YAAM2C,GAAG,GAAG,KAAKtG,KAAL,CAAW6D,QAAX,IAAuBA,QAAnC;AACAyC,QAAAA,GAAG,CAACY,gBAAJ,CAAqB,WAArB,EAAkC,KAAKlB,WAAvC;AACAM,QAAAA,GAAG,CAACY,gBAAJ,CAAqB,SAArB,EAAgC,KAAKhB,SAArC;AACD;AACF;AAzTH;AAAA;AAAA,qCA2TmB;AACf,UAAIvC,SAAJ,EAAe;AACb,YAAM2C,GAAG,GAAG,KAAKtG,KAAL,CAAW6D,QAAX,IAAuBA,QAAnC;AACAyC,QAAAA,GAAG,CAACY,gBAAJ,CAAqB,WAArB,EAAkC,KAAKjB,WAAvC;AACAK,QAAAA,GAAG,CAACY,gBAAJ,CAAqB,UAArB,EAAiC,KAAKV,UAAtC;AACD;AACF;AAjUH;AAAA;AAAA,iCAyXe7H,IAzXf,EAyXyD;AAAA,UAAtBwI,YAAsB,uEAAP,KAAO;AAAA,yBAOjD,KAAKnH,KAP4C;AAAA,2CAEnDoH,IAFmD;AAAA,UAEnDA,IAFmD,kCAE5C,CAF4C;AAAA,2CAGnDrI,IAHmD;AAAA,UAGnDA,IAHmD,kCAG5C,GAH4C;AAAA,+CAInDsI,QAJmD;AAAA,UAInDA,QAJmD,sCAIxCvD,IAJwC;AAAA,+CAKnDqC,QALmD;AAAA,UAKnDA,QALmD,sCAKxCrC,IALwC;AAAA,+CAMnDlI,QANmD;AAAA,UAMnDA,QANmD,sCAMxC,KANwC;;AAAA,UAS7C0C,QAT6C,GAShC,KAAKoG,KAAL,CAAWzG,WATqB,CAS7CK,QAT6C;AAWrD,WAAK+H,QAAL,CAAc,iBAAuB;AAAA,YAAXxH,IAAW,SAApB3C,OAAoB;AACnC,YAAIA,OAAqB,GAAG,EAA5B,CADmC;;AAInC,YAAI,OAAOkL,IAAP,KAAgB,UAApB,EAAgC;AAC9BlL,UAAAA,OAAO,GAAGkL,IAAI,CAACvI,IAAD,EAAOF,IAAP,EAAaI,IAAb,EAAmBnD,QAAnB,EAA6B0C,QAA7B,CAAd;AACAC,UAAAA,OAAO,CACL+I,KAAK,CAACC,OAAN,CAAcrL,OAAd,CADK,EAEL,+CAFK,CAAP;AAID,SAND,MAMO;AACL,kBAAQkL,IAAR;AACE,iBAAK,CAAL;AACElL,cAAAA,OAAO,GAAGuC,KAAK,CAACI,IAAD,EAAOF,IAAP,CAAf;AACA;;AACF,iBAAK,CAAL;AACEzC,cAAAA,OAAO,GAAG0C,KAAK,CAACC,IAAD,EAAOF,IAAP,CAAf;AACA;;AACF,iBAAK,CAAL;AACEzC,cAAAA,OAAO,GAAG4C,KAAK,CAACD,IAAD,EAAOF,IAAP,EAAaI,IAAb,EAAmBnD,QAAnB,EAA6B0C,QAA7B,CAAf;AACA;;AACF;AACEpC,cAAAA,OAAO,GAAGyC,IAAV;AACAJ,cAAAA,OAAO,CAAC,KAAD,YAAW7C,IAAX,0BAAP;AAZJ;AAcD;;AAED2L,QAAAA,QAAQ,CAACnL,OAAO,CAACkC,GAAR,CAAY,UAAA8D,CAAC;AAAA,iBAAIA,CAAC,CAAClG,GAAN;AAAA,SAAb,CAAD,CAAR;;AAEA,YAAImL,YAAJ,EAAkB;AAChBhB,UAAAA,QAAQ,CAACjK,OAAO,CAACkC,GAAR,CAAY,UAAA8D,CAAC;AAAA,mBAAIA,CAAC,CAAClG,GAAN;AAAA,WAAb,CAAD,CAAR;AACD;;AAED,eAAO;AAAEE,UAAAA,OAAO,EAAPA;AAAF,SAAP;AACD,OAlCD;AAmCD;AAvaH;AAAA;AAAA,6BAmdW;AAAA;;AAAA,yBAWH,IAXG,CAELwI,KAFK;AAAA,UAEIxI,OAFJ,gBAEIA,OAFJ;AAAA,UAEayI,WAFb,gBAEaA,WAFb;AAAA,UAE0BrE,cAF1B,gBAE0BA,cAF1B;AAAA,yBAWH,IAXG,CAGLN,KAHK;AAAA,UAIHwH,SAJG,gBAIHA,SAJG;AAAA,+CAKHC,SALG;AAAA,UAKHA,SALG,sCAKS,EALT;AAAA,+CAMHC,SANG;AAAA,UAMHA,SANG,sCAMS,EANT;AAAA,+CAOHC,SAPG;AAAA,UAOQC,IAPR,sCAOe,KAPf;AAAA,+CAQHC,QARG;AAAA,UAQHA,QARG,sCAQQ,KARR;AAAA,8CASHC,OATG;AAAA,UASHA,OATG,qCASO,KATP;AAaP,UAAMC,aAAa,GAAG7L,OAAO,CAACkC,GAAR,CAAY,iBAAkB;AAAA,YAAf5B,GAAe,SAAfA,GAAe;AAAA,YAAVR,GAAU,SAAVA,GAAU;AAClD;AACA,eAAO;AAAEmF,UAAAA,EAAE,EAAE3E,GAAN;AAAW6F,UAAAA,KAAK,EAAErG,GAAlB;AAAuBsG,UAAAA,OAAO,EAAEqC,WAAW,CAACrG,QAAZ,CAAqBtC,GAArB;AAAhC,SAAP;AACD,OAHqB,CAAtB;AAKA,UAAMuE,QAAQ,GAAGE,cAAK,CAACC,QAAN,CAAetC,GAAf,CAAmB,KAAK4B,KAAL,CAAWO,QAA9B,EAAwC,UAAAyH,KAAK,EAAI;AAChE,YAAI7D,cAAc,CAAC6D,KAAD,CAAlB,EAA2B;AACzB,iBAAOvH,cAAK,CAACwH,YAAN,CAAmBD,KAAnB,EAAgD;AACrDvF,YAAAA,KAAK,EAAEkC,WAD8C;AAErDzI,YAAAA,OAAO,EAAE6L,aAF4C;AAGrDzH,YAAAA,cAAc,EAAdA,cAHqD;AAIrDD,YAAAA,YAAY,EAAE,MAAI,CAACA,YAJkC;AAKrDe,YAAAA,YAAY,EAAEyG,QAAQ,GAAG/D,IAAH,GAAU,MAAI,CAACzC,SALgB;AAMrDpB,YAAAA,SAAS,EAAE4H,QAAQ,GAAG/D,IAAH,GAAU,MAAI,CAAC3D,WANmB;AAOrDD,YAAAA,SAAS,EAAE2H,QAAQ,GAAG/D,IAAH,GAAU,MAAI,CAAC1D;AAPmB,WAAhD,CAAP;AASD,SAVD,MAUO;AACL,iBAAO4H,KAAP;AACD;AACF,OAdgB,CAAjB;AAgBA,aAAOF,OAAO,GACZrH,4DACGA,cAAK,CAACyH,aAAN,CAAoBN,IAApB,qBACIF,SADJ;AAECS,QAAAA,KAAK,EAAEV,SAFR;AAGCD,QAAAA,SAAS,EAAEA,SAHZ;AAICY,QAAAA,GAAG,EAAE,KAAKxL;AAJX,SADH,EAOG2D,QAPH,CADY,GAWZE,4DACGA,cAAK,CAACyH,aAAN,CACCN,IADD,qBAGMF,SAHN;AAIGS,QAAAA,KAAK,EAAEV,SAJV;AAKGD,QAAAA,SAAS,EAAEA,SALd;AAMGY,QAAAA,GAAG,EAAE,KAAKxL;AANb,UAQC2D,QARD,CADH,CAXF;AAwBD;AA7gBH;AAAA;AAAA,6CAmBI8H,SAnBJ,EAoBIC,SApBJ,EAqBI;AAAA,4BASID,SATJ,CAEEtJ,IAFF;AAAA,UAEEA,IAFF,gCAES,GAFT;AAAA,UAGEf,MAHF,GASIqK,SATJ,CAGErK,MAHF;AAAA,8BASIqK,SATJ,CAIE7G,MAJF;AAAA,UAIEA,MAJF,kCAIW,CAAC,CAAD,EAAI,GAAJ,CAJX;AAAA,gCASI6G,SATJ,CAKEzM,QALF;AAAA,UAKEA,QALF,oCAKa,KALb;AAAA,gCASIyM,SATJ,CAMEhB,QANF;AAAA,UAMEA,QANF,oCAMavD,IANb;AAAA,gCASIuE,SATJ,CAOElC,QAPF;AAAA,UAOEA,QAPF,oCAOarC,IAPb;AAAA,kCASIuE,SATJ,CAQEE,aARF;AAAA,UAQEA,aARF,sCAQkB,KARlB;AAWA,UAAI5D,WAAW,GAAG2D,SAAS,CAAC3D,WAA5B;AACA,UAAI1G,WAAW,GAAGqK,SAAS,CAACrK,WAA5B;AACA,UAAI2G,WAAW,GAAG0D,SAAS,CAAC1D,WAA5B;AAEA,UAAM4D,SAA+B,GAAG,EAAxC;;AAEA,UAAI,CAAC7D,WAAD,IAAgB,CAAC1G,WAAjB,IAAgC,CAAC2G,WAArC,EAAkD;AAChDD,QAAAA,WAAW,GAAG,IAAIrD,WAAJ,EAAd;AACArD,QAAAA,WAAW,GAAG,IAAIoF,aAAJ,EAAd;AACAuB,QAAAA,WAAW,GAAG,IAAIvB,aAAJ,EAAd;AAEAmF,QAAAA,SAAS,CAAC7D,WAAV,GAAwBA,WAAxB;AACA6D,QAAAA,SAAS,CAACvK,WAAV,GAAwBA,WAAxB;AACAuK,QAAAA,SAAS,CAAC5D,WAAV,GAAwBA,WAAxB;AACD;;AAED,UACE0D,SAAS,CAACvJ,IAAV,KAAmB,IAAnB,IACAuJ,SAAS,CAAC9G,MAAV,KAAqB,IADrB,IAEA8G,SAAS,CAAC1M,QAAV,KAAuB,IAFvB,IAGAmD,IAAI,KAAKuJ,SAAS,CAACvJ,IAHnB,IAIAyC,MAAM,CAAC,CAAD,CAAN,KAAc8G,SAAS,CAAC9G,MAAV,CAAiB,CAAjB,CAJd,IAKAA,MAAM,CAAC,CAAD,CAAN,KAAc8G,SAAS,CAAC9G,MAAV,CAAiB,CAAjB,CALd,IAMA5F,QAAQ,KAAK0M,SAAS,CAAC1M,QAPzB,EAQE;AAAA,qCACmB4F,MADnB;AAAA,YACO0B,GADP;AAAA,YACYC,GADZ;;AAGAlF,QAAAA,WAAW,CACRuF,OADH,CACWzE,IADX,EAEGwE,QAFH,CAEY,CAACL,GAAD,EAAMC,GAAN,CAFZ,EAGGG,SAHH,CAGa,CAACJ,GAAD,EAAMC,GAAN,CAHb;;AAKA,YAAIvH,QAAQ,KAAK,IAAjB,EAAuB;AACrB+I,UAAAA,WAAW,CAACrB,SAAZ,CAAsB,CAACJ,GAAD,EAAMC,GAAN,CAAtB,EAAkCI,QAAlC,CAA2C,CAAC,GAAD,EAAM,CAAN,CAA3C;AACAqB,UAAAA,WAAW,CAACpB,OAAZ,CAAoBzE,IAApB,EAA0BwE,QAA1B,CAAmC,CAACJ,GAAD,EAAMD,GAAN,CAAnC;AACD,SAHD,MAGO;AACLyB,UAAAA,WAAW,CAACrB,SAAZ,CAAsB,CAACJ,GAAD,EAAMC,GAAN,CAAtB,EAAkCI,QAAlC,CAA2C,CAAC,CAAD,EAAI,GAAJ,CAA3C;AACAqB,UAAAA,WAAW,CAACpB,OAAZ,CAAoBzE,IAApB,EAA0BwE,QAA1B,CAAmC,CAACL,GAAD,EAAMC,GAAN,CAAnC;AACD;;AAED5E,QAAAA,OAAO,CACL4E,GAAG,GAAGD,GADD,YAEFxH,IAFE,sEAE8DyH,GAF9D,sBAE6ED,GAF7E,OAAP;;AAhBA,0BAqB6BnF,UAAU,CACrCC,MAAM,IAAIsK,SAAS,CAACtK,MADiB,EAErCpC,QAFqC,EAGrCqC,WAHqC,EAIrCsK,aAJqC,CArBvC;AAAA,YAqBQrM,OArBR,eAqBQA,OArBR;AAAA,YAqBiBiC,OArBjB,eAqBiBA,OArBjB;;AA4BA,YAAIA,OAAO,IAAIH,MAAM,KAAKyK,SAAtB,IAAmCzK,MAAM,KAAKsK,SAAS,CAACtK,MAA5D,EAAoE;AAClEqJ,UAAAA,QAAQ,CAACnL,OAAO,CAACkC,GAAR,CAAY,UAAA8D,CAAC;AAAA,mBAAIA,CAAC,CAAClG,GAAN;AAAA,WAAb,CAAD,CAAR;AACAmK,UAAAA,QAAQ,CAACjK,OAAO,CAACkC,GAAR,CAAY,UAAA8D,CAAC;AAAA,mBAAIA,CAAC,CAAClG,GAAN;AAAA,WAAb,CAAD,CAAR;AACD;;AAEDwM,QAAAA,SAAS,CAACzJ,IAAV,GAAiBA,IAAjB;AACAyJ,QAAAA,SAAS,CAACxK,MAAV,GAAmBA,MAAnB;AACAwK,QAAAA,SAAS,CAAChH,MAAV,GAAmBA,MAAnB;AACAgH,QAAAA,SAAS,CAACtM,OAAV,GAAoBA,OAApB;AACAsM,QAAAA,SAAS,CAAC5M,QAAV,GAAqBA,QAArB;AACD,OA9CD,MA8CO,IAAI,CAACqI,KAAK,CAACjG,MAAD,EAASsK,SAAS,CAACtK,MAAnB,CAAV,EAAsC;AAAA,2BACdD,UAAU,CACrCC,MADqC,EAErCpC,QAFqC,EAGrCqC,WAHqC,EAIrCsK,aAJqC,CADI;AAAA,YACnCrM,QADmC,gBACnCA,OADmC;AAAA,YAC1BiC,QAD0B,gBAC1BA,OAD0B;;AAQ3C,YAAIA,QAAJ,EAAa;AACXkJ,UAAAA,QAAQ,CAACnL,QAAO,CAACkC,GAAR,CAAY,UAAA8D,CAAC;AAAA,mBAAIA,CAAC,CAAClG,GAAN;AAAA,WAAb,CAAD,CAAR;AACAmK,UAAAA,QAAQ,CAACjK,QAAO,CAACkC,GAAR,CAAY,UAAA8D,CAAC;AAAA,mBAAIA,CAAC,CAAClG,GAAN;AAAA,WAAb,CAAD,CAAR;AACD;;AAEDwM,QAAAA,SAAS,CAACxK,MAAV,GAAmBA,MAAnB;AACAwK,QAAAA,SAAS,CAACtM,OAAV,GAAoBA,QAApB;AACD;;AAED,UAAIwM,MAAM,CAACC,IAAP,CAAYH,SAAZ,EAAuB/K,MAA3B,EAAmC;AACjC,eAAO+K,SAAP;AACD;;AAED,aAAO,IAAP;AACD;AApHH;;AAAA;AAAA,EAEUI,mBAFV;;;;;;;;;;;"}