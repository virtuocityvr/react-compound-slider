{"version":3,"file":"rcs.cjs.production.min.js","sources":["../src/Slider/utils.ts","../src/Slider/modes.ts","../src/utils.ts","../src/Rail/Rail.tsx","../src/Handles/Handles.tsx","../src/scales/LinearScale.ts","../src/Ticks/Ticks.tsx","../src/Tracks/Tracks.tsx","../src/scales/DiscreteScale.ts","../src/Slider/Slider.tsx"],"sourcesContent":["import React from 'react';\nimport warning from 'warning';\n\nimport { DiscreteScale } from '../scales/DiscreteScale';\nimport { HandleItem } from '../types';\n\nexport const prfx = 'react-compound-slider:';\n\nexport function getSortByVal(reversed: boolean = false) {\n  return function sortByVal(a: HandleItem, b: HandleItem) {\n    if (a.val > b.val) {\n      return reversed ? -1 : 1;\n    }\n\n    if (b.val > a.val) {\n      return reversed ? 1 : -1;\n    }\n\n    return 0;\n  };\n}\n\nexport function getUpdatedHandles(\n  handles: HandleItem[],\n  updateKey: string,\n  updateValue: number,\n  reversed: boolean = false\n) {\n  const index = handles.findIndex(v => v.key === updateKey);\n\n  if (index !== -1) {\n    const { key, val } = handles[index];\n\n    if (val === updateValue) {\n      return handles;\n    }\n\n    return [\n      ...handles.slice(0, index),\n      { key, val: updateValue },\n      ...handles.slice(index + 1),\n    ].sort(getSortByVal(reversed));\n  }\n\n  return handles;\n}\n\nexport function getSliderDomain(slider: Element | null, vertical: boolean) {\n  if (!slider) {\n    return [0, 0];\n  }\n\n  const s = slider.getBoundingClientRect();\n\n  const d0 = vertical ? s.top : s.left;\n  const d1 = vertical ? s.bottom : s.right;\n\n  return [d0, d1];\n}\n\nexport function isNotValidTouch({\n  type = '',\n  touches,\n}: {\n  type: string;\n  touches: TouchEvent['touches'];\n}) {\n  return (\n    !touches ||\n    touches.length > 1 ||\n    (type.toLowerCase() === 'touchend' && touches.length > 0)\n  );\n}\n\nexport function getTouchPosition(\n  vertical: boolean,\n  e: React.TouchEvent | TouchEvent\n) {\n  return vertical ? e.touches[0].clientY : e.touches[0].pageX;\n}\n\nexport function getHandles(\n  values: number[] = [],\n  reversed: boolean,\n  valueToStep: DiscreteScale,\n  warn: boolean\n) {\n  let changes = 0;\n\n  const handles = values\n    .map(x => {\n      const val = valueToStep.getValue(x);\n\n      if (x !== val) {\n        changes += 1;\n        warning(\n          !warn,\n          `${prfx} Invalid value encountered. Changing ${x} to ${val}.`\n        );\n      }\n\n      return val;\n    })\n    .map((val, i) => ({ key: `$$-${i}`, val }))\n    .sort(getSortByVal(reversed));\n\n  return { handles, changes };\n}\n","import { getUpdatedHandles } from './utils';\nimport { HandleItem } from '../types';\n\n// default mode\nexport function mode1(_: HandleItem[], next: HandleItem[]) {\n  return next;\n}\n\n// prevent duplicate values and crossing\nexport function mode2(curr: HandleItem[], next: HandleItem[]) {\n  for (let i = 0; i < curr.length; i++) {\n    if (curr[i].key !== next[i].key) {\n      return curr;\n    }\n\n    if (next[i + 1] && next[i].val === next[i + 1].val) {\n      return curr;\n    }\n  }\n\n  return next;\n}\n\n// pushable mode\nexport function mode3(\n  curr: HandleItem[],\n  next: HandleItem[],\n  step: number,\n  reversed: boolean,\n  getValue: (x: number) => number\n): HandleItem[] {\n  let indexForMovingHandle = -1;\n  let handleMoveIsPositive = true;\n\n  for (let i = 0; i < curr.length; i++) {\n    const c = curr[i];\n    const n = next[i];\n\n    // make sure keys are in same order if not return curr\n    if (!n || n.key !== c.key) {\n      return curr;\n    } else if (n.val !== c.val) {\n      indexForMovingHandle = i;\n      handleMoveIsPositive = n.val - c.val > 0;\n    }\n  }\n\n  // nothing has changed (shouldn't happen but just in case).\n  if (indexForMovingHandle === -1) {\n    return curr;\n  } else {\n    const increment = handleMoveIsPositive ? step : -step;\n\n    for (let i = 0; i < next.length; i++) {\n      const n0 = next[i];\n      const n1 = next[i + 1];\n\n      if (n1 && n0.val === n1.val) {\n        if (i === indexForMovingHandle) {\n          const newStep = n1.val + increment;\n          if (getValue(newStep) === newStep) {\n            const clone = getUpdatedHandles(\n              next,\n              n1.key,\n              n1.val + increment,\n              reversed\n            );\n            const check = mode3(next, clone, step, reversed, getValue);\n\n            if (check === next) {\n              return curr;\n            } else {\n              return check;\n            }\n          } else {\n            return curr;\n          }\n        } else {\n          const newStep = n0.val + increment;\n          if (getValue(newStep) === newStep) {\n            const clone = getUpdatedHandles(\n              next,\n              n0.key,\n              n0.val + increment,\n              reversed\n            );\n            const check = mode3(next, clone, step, reversed, getValue);\n\n            if (check === next) {\n              return curr;\n            } else {\n              return check;\n            }\n          } else {\n            return curr;\n          }\n        }\n      }\n    }\n  }\n\n  return next;\n}\n","export function callAll<T>(...fns: (((e: T) => void) | undefined)[]) {\n  return (e: T) => {\n    return fns.forEach(fn => fn && fn(e));\n  };\n}\n","import React, { Component } from 'react';\nimport { callAll } from '../utils';\n\nimport { RailProps, RailEventHandlers } from './types';\n\nexport class Rail<T extends RailEventHandlers> extends Component<RailProps> {\n  getRailProps = (props?: Partial<T>) => {\n    const { emitMouse, emitTouch } = this.props;\n\n    return {\n      ...props,\n      onMouseDown: callAll<React.MouseEvent<Element>>(\n        props && props.onMouseDown,\n        emitMouse\n      ),\n      onTouchStart: callAll(props && props.onTouchStart, emitTouch),\n    };\n  };\n\n  render() {\n    const {\n      getRailProps,\n      props: { getEventData, activeHandleID = '', children },\n    } = this;\n\n    const renderedChildren = children({\n      //@ts-ignore\n      getEventData,\n      activeHandleID,\n      getRailProps,\n    });\n    return renderedChildren && React.Children.only(renderedChildren);\n  }\n}\n","import React, { Component } from 'react';\nimport { callAll } from '../utils';\n\nimport { HandlesProps, HandleEventHandlers as HE } from './types';\n\nexport class Handles<T extends HE = HE> extends Component<HandlesProps> {\n  autofocus = (e: React.MouseEvent<Element>) => {\n    if (e.target instanceof HTMLElement) {\n      e.target.focus();\n    }\n  };\n\n  getHandleProps = (id: string, props?: Partial<T>) => {\n    const { emitKeyboard, emitMouse, emitTouch } = this.props;\n\n    return {\n      ...props,\n      onKeyDown: callAll<React.KeyboardEvent<Element>>(\n        props && props.onKeyDown,\n        //@ts-ignore\n        (e: React.KeyboardEvent<Element>) => emitKeyboard(e, id)\n      ),\n      onMouseDown: callAll<React.MouseEvent<Element>>(\n        props && props.onMouseDown,\n        this.autofocus,\n        //@ts-ignore\n        (e: React.MouseEvent) => emitMouse(e, id)\n      ),\n      onTouchStart: callAll<React.TouchEvent<Element>>(\n        props && props.onTouchStart,\n        //@ts-ignore\n        (e: React.TouchEvent<Element>) => emitTouch(e, id)\n      ),\n    };\n  };\n\n  render() {\n    const {\n      getHandleProps,\n      props: { activeHandleID = '', children, handles = [] },\n    } = this;\n\n    const renderedChildren = children({\n      handles,\n      activeHandleID,\n      getHandleProps,\n    });\n\n    return renderedChildren && React.Children.only(renderedChildren);\n  }\n}\n","import { ticks } from 'd3-array';\n\nimport { Interpolator } from '../types';\n\nexport class LinearScale {\n  interpolator: Interpolator | null;\n  domain: number[] = [0, 1];\n  range: number[] = [0, 1];\n\n  constructor() {\n    this.domain = [0, 1];\n    this.range = [0, 1];\n    this.interpolator = null;\n  }\n\n  createInterpolator(domain: number[], range: number[]) {\n    const d0 = domain[0];\n    const d1 = domain[1];\n\n    const r0 = range[0];\n    const r1 = range[1];\n\n    if (d1 < d0) {\n      return (x: number) =>\n        this.interpolateValue(r1, r0)(this.deinterpolateValue(d1, d0)(x));\n    } else {\n      return (x: number) =>\n        this.interpolateValue(r0, r1)(this.deinterpolateValue(d0, d1)(x));\n    }\n  }\n\n  interpolateValue(a: number, b: number) {\n    return (\n      (a = +a),\n      (b -= a),\n      function i(t: number) {\n        return a + b * t;\n      }\n    );\n  }\n\n  deinterpolateValue(a: number, b: number) {\n    return (b -= a = +a) ? (x: number) => (x - a) / b : () => b;\n  }\n\n  rescale() {\n    this.interpolator = null;\n\n    return this;\n  }\n\n  getValue(x: number) {\n    const { domain, range } = this;\n\n    return (\n      this.interpolator ||\n      (this.interpolator = this.createInterpolator(domain, range))\n    )(+x);\n  }\n\n  setDomain(val: number[]) {\n    this.domain = [val[0], val[1]];\n\n    this.rescale();\n\n    return this;\n  }\n\n  getDomain() {\n    return this.domain;\n  }\n\n  setRange(val: number[]) {\n    this.range = [val[0], val[1]];\n\n    return this;\n  }\n\n  getTicks(count: number) {\n    const d = this.domain;\n    return ticks(d[0], d[d.length - 1], count ? count : 10);\n  }\n}\n","import React from 'react';\n\nimport { TicksProps } from './types';\nimport { LinearScale } from '../scales/LinearScale';\n\nconst defaultGetEventData = () => ({ value: 0, percent: 0 });\n\nexport const Ticks: React.FC<TicksProps> = React.memo(\n  ({\n    children,\n    values,\n    scale = new LinearScale(),\n    count = 10,\n    getEventData = defaultGetEventData,\n    activeHandleID = '',\n  }) => {\n    const ticks = (values ? values : scale.getTicks(count)).map(value => ({\n      id: `$$-${value}`,\n      value,\n      percent: scale.getValue(value),\n    }));\n\n    return children({ getEventData, activeHandleID, ticks });\n  }\n);\n","import React, { Component } from 'react';\n\nimport { callAll } from '../utils';\nimport { LinearScale } from '../scales/LinearScale';\nimport { TracksProps } from './types';\nimport { OtherProps } from '../types';\n\nconst defaultGetEventData = () => ({ value: 0, percent: 0 });\n\nexport class Tracks extends Component<TracksProps> {\n  getTrackProps = (props?: OtherProps) => {\n    const { emitMouse, emitTouch } = this.props;\n\n    return {\n      ...(props || {}),\n      onMouseDown: callAll<React.MouseEvent<Element>>(\n        props && props.onMouseDown,\n        emitMouse\n      ),\n      onTouchStart: callAll<React.TouchEvent<Element>>(\n        props && props.onTouchStart,\n        emitTouch\n      ),\n    };\n  };\n\n  render() {\n    const {\n      getTrackProps,\n      props: {\n        children,\n        left = true,\n        right = true,\n        scale = new LinearScale(),\n        handles = [],\n        getEventData = defaultGetEventData,\n        activeHandleID = '',\n      },\n    } = this;\n\n    const domain = scale.getDomain();\n    const tracks = [];\n\n    for (let i = 0; i < handles.length + 1; i++) {\n      let source = handles[i - 1];\n      let target = handles[i];\n\n      if (i === 0 && left === true) {\n        source = { id: '$', value: domain[0], percent: 0 };\n      } else if (i === handles.length && right === true) {\n        target = { id: '$', value: domain[1], percent: 100 };\n      }\n\n      if (source && target) {\n        tracks.push({\n          id: `${source.id}-${target.id}`,\n          source,\n          target,\n        });\n      }\n    }\n\n    const renderedChildren = children({\n      getEventData,\n      activeHandleID,\n      tracks,\n      getTrackProps,\n    });\n\n    return renderedChildren && React.Children.only(renderedChildren);\n  }\n}\n","function clamp(value: number, min: number, max: number) {\n  return Math.min(Math.max(value, min), max);\n}\n\nexport class DiscreteScale {\n  step: number = 1;\n  domain: number[] = [0, 1];\n  range: number[] = [0, 1];\n\n  setDomain = (val: number[]) => {\n    this.domain = [val[0], val[1]];\n\n    return this;\n  };\n\n  setRange = (val: number[]) => {\n    this.range = [val[0], val[1]];\n\n    return this;\n  };\n\n  setStep = (val: number) => {\n    this.step = val;\n\n    return this;\n  };\n\n  getValue = (x: number) => {\n    const {\n      domain: [d0, d1],\n      range: [r0, r1],\n      step,\n    } = this;\n\n    const p = (clamp(x, d0, d1) - d0) / (d1 - d0);\n    const b = step * Math.round((p * (r1 - r0)) / step) + r0;\n\n    return clamp(b, r0 < r1 ? r0 : r1, r1 > r0 ? r1 : r0);\n  };\n}\n","import React, { PureComponent } from 'react';\nimport warning from 'warning';\nimport { mode1, mode2, mode3 } from './modes';\nimport {\n  isNotValidTouch,\n  getTouchPosition,\n  getUpdatedHandles,\n  getSliderDomain,\n  getHandles,\n  prfx,\n} from './utils';\nimport { Rail } from '../Rail';\nimport { Handles } from '../Handles';\nimport { Ticks } from '../Ticks';\nimport { Tracks } from '../Tracks';\nimport { LinearScale } from '../scales/LinearScale';\nimport { DiscreteScale } from '../scales/DiscreteScale';\n\nimport { SliderProps, SliderState } from './types';\nimport { HandleItem } from '../types';\n\nconst isBrowser =\n  typeof window !== 'undefined' && typeof document !== 'undefined';\n\nconst noop = () => {};\n\nconst compare = (b: any[]) => (m: any, d: any, i: number) => m && b[i] === d;\n\nconst equal = (a: any, b: any) => {\n  return a === b || (a.length === b.length && a.reduce(compare(b), true));\n};\n\ninterface RCSComponent {\n  type: {\n    name: 'Rail' | 'Handles' | 'Ticks' | 'Tracks';\n  };\n}\n\nconst isRCSComponent = (item: React.ReactNode): item is RCSComponent => {\n  const type = (item as RCSComponent).type;\n  const name = type ? type.name : '';\n\n  return (\n    name === Handles.name ||\n    name === Rail.name ||\n    name === Ticks.name ||\n    name === Tracks.name\n  );\n};\n\nconst getNextValue = (\n  curr: number,\n  step: number,\n  domain: number[],\n  reversed: boolean\n) => {\n  const newVal = reversed ? curr - step : curr + step;\n  return reversed ? Math.max(domain[0], newVal) : Math.min(domain[1], newVal);\n};\n\nconst getPrevValue = (\n  curr: number,\n  step: number,\n  domain: number[],\n  reversed: boolean\n) => {\n  const newVal = reversed ? curr + step : curr - step;\n  return reversed ? Math.min(domain[1], newVal) : Math.max(domain[0], newVal);\n};\n\nexport class Slider<\n  T extends HTMLDivElement = HTMLDivElement\n> extends PureComponent<SliderProps, SliderState> {\n  state = {\n    step: 0.1,\n    values: [],\n    domain: [0, 100],\n    handles: [] as HandleItem[],\n    reversed: false,\n    activeHandleID: '',\n    valueToPerc: null,\n    valueToStep: null,\n    pixelToStep: null,\n    document: document,\n  };\n\n  slider = React.createRef<T>();\n\n  static getDerivedStateFromProps(\n    nextProps: SliderProps,\n    prevState: SliderState\n  ) {\n    const {\n      step = 0.1,\n      values,\n      domain = [0, 100] as number[],\n      reversed = false,\n      onUpdate = noop,\n      onChange = noop,\n      warnOnChanges = false,\n    } = nextProps;\n\n    let valueToPerc = prevState.valueToPerc;\n    let valueToStep = prevState.valueToStep;\n    let pixelToStep = prevState.pixelToStep;\n\n    const nextState: Partial<SliderState> = {};\n\n    if (!valueToPerc || !valueToStep || !pixelToStep) {\n      valueToPerc = new LinearScale();\n      valueToStep = new DiscreteScale();\n      pixelToStep = new DiscreteScale();\n\n      nextState.valueToPerc = valueToPerc;\n      nextState.valueToStep = valueToStep;\n      nextState.pixelToStep = pixelToStep;\n    }\n\n    if (\n      prevState.step === null ||\n      prevState.domain === null ||\n      prevState.reversed === null ||\n      step !== prevState.step ||\n      domain[0] !== prevState.domain[0] ||\n      domain[1] !== prevState.domain[1] ||\n      reversed !== prevState.reversed\n    ) {\n      const [min, max] = domain;\n\n      valueToStep\n        .setStep(step)\n        .setRange([min, max])\n        .setDomain([min, max]);\n\n      if (reversed === true) {\n        valueToPerc.setDomain([min, max]).setRange([100, 0]);\n        pixelToStep.setStep(step).setRange([max, min]);\n      } else {\n        valueToPerc.setDomain([min, max]).setRange([0, 100]);\n        pixelToStep.setStep(step).setRange([min, max]);\n      }\n\n      warning(\n        max > min,\n        `${prfx} Max must be greater than min (even if reversed). Max is ${max}. Min is ${min}.`\n      );\n\n      const { handles, changes } = getHandles(\n        values || prevState.values,\n        reversed,\n        valueToStep,\n        warnOnChanges\n      );\n\n      if (changes || values === undefined || values === prevState.values) {\n        onUpdate(handles.map(d => d.val));\n        onChange(handles.map(d => d.val));\n      }\n\n      nextState.step = step;\n      nextState.values = values;\n      nextState.domain = domain;\n      nextState.handles = handles;\n      nextState.reversed = reversed;\n    } else if (!equal(values, prevState.values)) {\n      const { handles, changes } = getHandles(\n        values,\n        reversed,\n        valueToStep,\n        warnOnChanges\n      );\n\n      if (changes) {\n        onUpdate(handles.map(d => d.val));\n        onChange(handles.map(d => d.val));\n      }\n\n      nextState.values = values;\n      nextState.handles = handles;\n    }\n\n    if (Object.keys(nextState).length) {\n      return nextState;\n    }\n\n    return null;\n  }\n\n  componentDidMount() {\n    const { pixelToStep } = this.state;\n    const { vertical } = this.props;\n\n    // @ts-ignore\n    pixelToStep.setDomain(getSliderDomain(this.slider.current, vertical));\n  }\n\n  componentWillUnmount() {\n    this.removeListeners();\n  }\n\n  removeListeners() {\n    const doc = this.props.document || document;\n    if (isBrowser) {\n      doc.removeEventListener('mousemove', this.onMouseMove);\n      doc.removeEventListener('mouseup', this.onMouseUp);\n      doc.removeEventListener('touchmove', this.onTouchMove);\n      doc.removeEventListener('touchend', this.onTouchEnd);\n    }\n  }\n\n  onKeyDown = (e: KeyboardEvent, handleID: string) => {\n    let validUpKeys = ['ArrowRight', 'ArrowUp'];\n    let validDownKeys = ['ArrowDown', 'ArrowLeft'];\n\n    const {\n      state: { handles },\n      props: {\n        step = 0.1,\n        reversed = false,\n        vertical = false,\n        domain = [0, 100] as number[],\n      },\n    } = this;\n    const key = e.key || `${e.keyCode}`;\n\n    if (!validUpKeys.concat(validDownKeys).includes(key)) {\n      return;\n    }\n\n    if (vertical) {\n      [validUpKeys, validDownKeys] = [validDownKeys, validUpKeys];\n    }\n\n    e.stopPropagation && e.stopPropagation();\n    e.preventDefault && e.preventDefault();\n\n    const found = handles.find(value => {\n      return value.key === handleID;\n    });\n\n    if (!found) {\n      return;\n    }\n\n    const currVal = found.val;\n    let newVal = currVal;\n\n    if (validUpKeys.includes(key)) {\n      newVal = getNextValue(currVal, step, domain, reversed);\n    } else if (validDownKeys.includes(key)) {\n      newVal = getPrevValue(currVal, step, domain, reversed);\n    }\n    const nextHandles = handles.map(v =>\n      v.key === handleID ? { key: v.key, val: newVal } : v\n    );\n\n    this.submitUpdate(nextHandles, true);\n  };\n\n  onMouseDown = (e: MouseEvent, handleID: string) => {\n    this.onStart(e, handleID, false);\n  };\n\n  onTouchStart = (e: TouchEvent, handleID: string) => {\n    if (isNotValidTouch(e)) {\n      return;\n    }\n\n    this.onStart(e, handleID, true);\n  };\n\n  onStart(e: MouseEvent | TouchEvent, handleID: string, isTouch: boolean) {\n    const {\n      state: { handles },\n      props: { onSlideStart = noop },\n    } = this;\n\n    if (!isTouch) {\n      e.preventDefault && e.preventDefault();\n    }\n\n    e.stopPropagation && e.stopPropagation();\n\n    const found = handles.find(value => {\n      return value.key === handleID;\n    });\n\n    if (found) {\n      this.setState({ activeHandleID: handleID });\n      onSlideStart(\n        handles.map(d => d.val),\n        { activeHandleID: handleID }\n      );\n      isTouch ? this.addTouchEvents() : this.addMouseEvents();\n    } else {\n      this.setState({ activeHandleID: '' });\n      this.handleRailAndTrackClicks(e, isTouch);\n    }\n  }\n\n  handleRailAndTrackClicks(e: MouseEvent | TouchEvent, isTouch: boolean) {\n    const {\n      state: { handles: curr, pixelToStep },\n      props: { vertical, reversed = false },\n    } = this;\n    const { slider } = this;\n\n    // double check the dimensions of the slider\n    // @ts-ignore\n    pixelToStep.setDomain(getSliderDomain(slider.current, vertical));\n\n    // find the closest value (aka step) to the event location\n    let updateValue: number;\n\n    if (isTouch) {\n      // @ts-ignore\n      updateValue = pixelToStep.getValue(getTouchPosition(vertical, e));\n    } else {\n      // @ts-ignore\n      updateValue = pixelToStep.getValue(vertical ? e.clientY : e.pageX);\n    }\n\n    // find the closest handle key\n    let updateKey = '';\n    let minDiff = Infinity;\n\n    for (let i = 0; i < curr.length; i++) {\n      const { key, val } = curr[i];\n      const diff = Math.abs(val - updateValue);\n\n      if (diff < minDiff) {\n        updateKey = key;\n        minDiff = diff;\n      }\n    }\n\n    // generate a \"candidate\" set of values - a suggestion of what to do\n    const nextHandles = getUpdatedHandles(\n      curr,\n      updateKey,\n      updateValue,\n      reversed\n    );\n\n    // submit the candidate values\n    this.setState({ activeHandleID: updateKey }, () => {\n      this.submitUpdate(nextHandles, true);\n      isTouch ? this.addTouchEvents() : this.addMouseEvents();\n    });\n  }\n\n  getEventData = (e: React.MouseEvent | React.TouchEvent, isTouch: boolean) => {\n    const {\n      state: { pixelToStep, valueToPerc },\n      props: { vertical },\n    } = this;\n\n    // double check the dimensions of the slider\n    // @ts-ignore\n    pixelToStep.setDomain(getSliderDomain(this.slider.current, vertical));\n\n    let value;\n\n    if (isTouch && e instanceof TouchEvent) {\n      // @ts-ignore\n      value = pixelToStep.getValue(getTouchPosition(vertical, e));\n    } else if (e instanceof MouseEvent) {\n      // @ts-ignore\n      value = pixelToStep.getValue(vertical ? e.clientY : e.pageX);\n    }\n    return {\n      value,\n      // @ts-ignore\n      percent: valueToPerc.getValue(value),\n    };\n  };\n\n  addMouseEvents() {\n    if (isBrowser) {\n      const doc = this.props.document || document;\n      doc.addEventListener('mousemove', this.onMouseMove);\n      doc.addEventListener('mouseup', this.onMouseUp);\n    }\n  }\n\n  addTouchEvents() {\n    if (isBrowser) {\n      const doc = this.props.document || document;\n      doc.addEventListener('touchmove', this.onTouchMove);\n      doc.addEventListener('touchend', this.onTouchEnd);\n    }\n  }\n\n  onMouseMove = (e: MouseEvent) => {\n    const {\n      state: { handles: curr, pixelToStep, activeHandleID = '' },\n      props: { vertical, reversed = false },\n    } = this;\n    // double check the dimensions of the slider\n    // @ts-ignore\n    pixelToStep.setDomain(getSliderDomain(this.slider.current, vertical));\n\n    // find the closest value (aka step) to the event location\n    // @ts-ignore\n    const updateValue = pixelToStep.getValue(vertical ? e.clientY : e.pageX);\n\n    // generate a \"candidate\" set of values - a suggestion of what to do\n    const nextHandles = getUpdatedHandles(\n      curr,\n      activeHandleID,\n      updateValue,\n      reversed\n    );\n\n    // submit the candidate values\n    this.submitUpdate(nextHandles);\n  };\n\n  onTouchMove = (e: TouchEvent) => {\n    const {\n      state: { handles: curr, pixelToStep, activeHandleID },\n      props: { vertical, reversed },\n    } = this;\n    if (pixelToStep === null || isNotValidTouch(e)) {\n      return;\n    }\n\n    // double check the dimensions of the slider\n    // @ts-ignore\n    pixelToStep.setDomain(getSliderDomain(this.slider.current, vertical));\n\n    // find the closest value (aka step) to the event location\n    // @ts-ignore\n    const updateValue = pixelToStep.getValue(getTouchPosition(vertical, e));\n\n    // generate a \"candidate\" set of values - a suggestion of what to do\n    const nextHandles = getUpdatedHandles(\n      curr,\n      activeHandleID,\n      updateValue,\n      reversed\n    );\n\n    // submit the candidate values\n    this.submitUpdate(nextHandles);\n  };\n\n  submitUpdate(next: HandleItem[], callOnChange = false) {\n    const {\n      mode = 1,\n      step = 0.1,\n      onUpdate = noop,\n      onChange = noop,\n      reversed = false,\n    } = this.props;\n    //@ts-ignore\n    const { getValue } = this.state.valueToStep;\n\n    this.setState(({ handles: curr }) => {\n      let handles: HandleItem[] = [];\n\n      // given the current handles and a candidate set, decide what to do\n      if (typeof mode === 'function') {\n        handles = mode(curr, next, step, reversed, getValue);\n        warning(\n          Array.isArray(handles),\n          'Custom mode function did not return an array.'\n        );\n      } else {\n        switch (mode) {\n          case 1:\n            handles = mode1(curr, next);\n            break;\n          case 2:\n            handles = mode2(curr, next);\n            break;\n          case 3:\n            handles = mode3(curr, next, step, reversed, getValue);\n            break;\n          default:\n            handles = next;\n            warning(false, `${prfx} Invalid mode value.`);\n        }\n      }\n\n      onUpdate(handles.map(d => d.val));\n\n      if (callOnChange) {\n        onChange(handles.map(d => d.val));\n      }\n\n      return { handles };\n    });\n  }\n\n  onMouseUp = () => {\n    const {\n      state: { handles = [], activeHandleID },\n      props: { onChange = noop, onSlideEnd = noop },\n    } = this;\n\n    onChange(handles.map(d => d.val));\n    onSlideEnd(\n      handles.map(d => d.val),\n      { activeHandleID }\n    );\n\n    this.setState({ activeHandleID: '' });\n\n    if (isBrowser) {\n      const doc = this.props.document || document;\n      doc.removeEventListener('mousemove', this.onMouseMove);\n      doc.removeEventListener('mouseup', this.onMouseUp);\n    }\n  };\n\n  onTouchEnd = () => {\n    const {\n      state: { handles, activeHandleID },\n      props: { onChange = noop, onSlideEnd = noop },\n    } = this;\n\n    onChange(handles.map(d => d.val));\n    onSlideEnd(\n      handles.map(d => d.val),\n      { activeHandleID }\n    );\n\n    this.setState({ activeHandleID: '' });\n\n    if (isBrowser) {\n      const doc = this.props.document || document;\n      doc.removeEventListener('touchmove', this.onTouchMove);\n      doc.removeEventListener('touchend', this.onTouchEnd);\n    }\n  };\n\n  render() {\n    const {\n      state: { handles, valueToPerc, activeHandleID },\n      props: {\n        className,\n        rootStyle = {},\n        rootProps = {},\n        component: Comp = 'div',\n        disabled = false,\n        flatten = false,\n      },\n    } = this;\n\n    const mappedHandles = handles.map(({ key, val }) => {\n      // @ts-ignore\n      return { id: key, value: val, percent: valueToPerc.getValue(val) };\n    });\n\n    const children = React.Children.map(this.props.children, child => {\n      if (isRCSComponent(child)) {\n        return React.cloneElement(child as React.ReactElement, {\n          scale: valueToPerc,\n          handles: mappedHandles,\n          activeHandleID,\n          getEventData: this.getEventData,\n          emitKeyboard: disabled ? noop : this.onKeyDown,\n          emitMouse: disabled ? noop : this.onMouseDown,\n          emitTouch: disabled ? noop : this.onTouchStart,\n        });\n      } else {\n        return child;\n      }\n    });\n\n    return flatten ? (\n      <>\n        {React.createElement(Comp, {\n          ...rootProps,\n          style: rootStyle,\n          className: className,\n          ref: this.slider,\n        })}\n        {children}\n      </>\n    ) : (\n      <>\n        {React.createElement(\n          Comp,\n          {\n            ...rootProps,\n            style: rootStyle,\n            className: className,\n            ref: this.slider,\n          },\n          children\n        )}\n      </>\n    );\n  }\n}\n"],"names":["prfx","getSortByVal","reversed","a","b","val","getUpdatedHandles","handles","updateKey","updateValue","index","findIndex","v","key","slice","sort","getSliderDomain","slider","vertical","s","getBoundingClientRect","top","left","bottom","right","isNotValidTouch","type","touches","length","toLowerCase","getTouchPosition","e","clientY","pageX","getHandles","values","valueToStep","warn","changes","map","x","getValue","warning","i","mode1","_","next","mode2","curr","mode3","step","indexForMovingHandle","handleMoveIsPositive","c","n","increment","n0","n1","newStep","check","callAll","fns","forEach","fn","Rail","getRailProps","props","_this","emitTouch","onMouseDown","emitMouse","onTouchStart","Component","this","activeHandleID","renderedChildren","children","getEventData","React","Children","only","Handles","autofocus","target","HTMLElement","focus","getHandleProps","id","emitKeyboard","onKeyDown","LinearScale","interpolator","domain","range","d0","d1","r0","r1","interpolateValue","deinterpolateValue","t","createInterpolator","rescale","count","d","ticks","defaultGetEventData","value","percent","Ticks","memo","scale","getTicks","Tracks","getTrackProps","getDomain","tracks","source","push","clamp","min","max","Math","DiscreteScale","setDomain","setRange","setStep","p","round","isBrowser","window","document","noop","getNextValue","newVal","getPrevValue","Slider","state","valueToPerc","pixelToStep","createRef","handleID","validUpKeys","validDownKeys","keyCode","concat","includes","stopPropagation","preventDefault","found","find","currVal","nextHandles","submitUpdate","onStart","isTouch","current","TouchEvent","MouseEvent","onMouseMove","onTouchMove","onMouseUp","onChange","onSlideEnd","setState","doc","removeEventListener","onTouchEnd","PureComponent","removeListeners","onSlideStart","addTouchEvents","addMouseEvents","handleRailAndTrackClicks","minDiff","Infinity","diff","abs","_this2","addEventListener","callOnChange","mode","onUpdate","Array","isArray","className","rootStyle","rootProps","component","Comp","disabled","flatten","mappedHandles","child","name","cloneElement","_this3","createElement","style","ref","nextProps","prevState","warnOnChanges","nextState","undefined","reduce","m","compare","Object","keys"],"mappings":"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"}